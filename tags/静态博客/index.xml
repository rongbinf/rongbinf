<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>静态博客 - 标签 - Rongbin&#39;s Blog</title>
        <link>https://fanrongbin.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</link>
        <description>静态博客 - 标签 - Rongbin&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><managingEditor>fanrongbin0201@gmail.com (Rongbin Fan)</managingEditor>
            <webMaster>fanrongbin0201@gmail.com (Rongbin Fan)</webMaster><lastBuildDate>Tue, 13 Feb 2018 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://fanrongbin.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/" rel="self" type="application/rss+xml" /><item>
    <title>Hexo &#43; GitHub Pages &#43; Cloudflare</title>
    <link>https://fanrongbin.com/hexo-github-pages-cloudflare/</link>
    <pubDate>Tue, 13 Feb 2018 00:00:00 &#43;0000</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/hexo-github-pages-cloudflare/</guid><description><![CDATA[<h1 id="系统环境配置">系统环境配置</h1>
<h2 id="安装-nodejs">安装 Node.js</h2>
<p>Node.js 是一种 JavaScript 的运行环境，<a href="https://nodejs.org/download/" target="_blank" rel="noopener noreffer">点击此处</a>以下载。</p>
<p>如何安装 Node.js 详见<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html/" target="_blank" rel="noopener noreffer">此文章</a>。注意：Linux 上安装 Node.js 需要安装 Python 2.6 或 2.7 ，不建议安装 Python 3.0 以上版本。</p>
<h2 id="安装-git">安装 Git</h2>
<p>Git 是一个开源的分布式版本控制系统，帮助你合并多次改动并记录下来。<a href="http://git-scm.com/downloads/" target="_blank" rel="noopener noreffer">点击此处</a>以下载。</p>
<p>如何安装 Git 详见<a href="https://www.runoob.com/git/git-install-setup.html/" target="_blank" rel="noopener noreffer">此文章</a>。</p>
<h1 id="安装-hexo">安装 Hexo</h1>
<p>Hexo 是一个使用 Markdown 引擎解析文章的快速、简洁且高效的博客框架。当你已经安装好 Node.js 和 Git 后，直接使用 npm 安装 Hexo。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ <span class="nb">cd</span> &lt;folder&gt; <span class="c1"># 将 &lt;folder&gt; 改为你希望安装 Hexo 的路径</span>
    $ npm install hexo-cli -g <span class="c1"># 使用 npm 安装</span>
    $ hexo init &lt;folder&gt; <span class="c1"># 将 &lt;folder&gt; 改为你希望搭建博客的路径</span>
    $ <span class="nb">cd</span> &lt;folder&gt;
    $ hexo generate <span class="c1"># 或 hexo g</span>
    $ hexo server <span class="c1"># 或 hexo s</span>
</code></pre></td></tr></table>
</div>
</div><p>此时你可以访问 http://localhost:4000/ 查看预览。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ hexo -v <span class="c1"># 查看本地环境版本号。</span>
</code></pre></td></tr></table>
</div>
</div><p>目前我安装所用的本地环境如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    hexo: 3.5.0
    hexo-cli: 1.0.4
    os: Darwin 17.4.0 darwin x64
    http_parser: 2.7.0
    node: 8.9.4
    v8: 6.1.534.50
    uv: 1.15.0
    zlib: 1.2.11
    ares: 1.10.1-DEV
    modules: <span class="m">57</span>
    nghttp2: 1.25.0
    openssl: 1.0.2n
    icu: 59.1
    unicode: 9.0
    cldr: 31.0.1
    tz: 2017b
</code></pre></td></tr></table>
</div>
</div><h2 id="hexo-的基本命令">Hexo 的基本命令</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ hexo init &lt;folder&gt;
</code></pre></td></tr></table>
</div>
</div><p>新建一个博客。将 <folder> 改为你希望搭建博客的路径。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ hexo new <span class="o">[</span>layout<span class="o">]</span> &lt;title&gt;
</code></pre></td></tr></table>
</div>
</div><p>新建一篇 title.md 文章。如果没有设置 layout，将使用默认的 layout。可能的参数有：post, page。如果标题包含空格，请使用引号括起来。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ hexo generate
    <span class="c1"># 或简写为</span>
    $ hexo g
</code></pre></td></tr></table>
</div>
</div><p>生成静态文件，此时你可以在目录中看到一个叫 public 的文件夹。可选的选项有：-d(&ndash;deploy)表示文件生成后立刻部署网站， -w(&ndash;watch)表示监视文件变动。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ hexo server
    <span class="c1"># 或简写为</span>
    $ hexo s
</code></pre></td></tr></table>
</div>
</div><p>启动服务器。默认情况下访问地址为：http://localhost:4000/ 。可选的选项有 -p(&ndash;port)重设端口，-s(&ndash;static)只使用静态文件，-l(&ndash;log)启动日记记录，使用覆盖记录格式。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ hexo deploy
    <span class="c1"># 或简写为</span>
    $ hexo d
</code></pre></td></tr></table>
</div>
</div><p>部署网站到远端。可选的选项有：-g(&ndash;generate)部署之前先生成静态文件。</p>
<h2 id="hexo-的文件结构">Hexo 的文件结构</h2>
<p>博客新建完成后，指定文件夹的目录如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    .
    ├── _config.yml <span class="c1"># 网站的配置信息。</span>
    ├── package.json <span class="c1"># 应用程序的信息。</span>
    ├── scaffolds <span class="c1"># 固定模板。</span>
    ├── <span class="nb">source</span> <span class="c1"># 资源文件夹。</span>
    <span class="p">|</span>    ├── _drafts
    <span class="p">|</span>    └── _posts <span class="c1"># 将文章存放于此。</span>
    └── themes <span class="c1"># 主题文件夹。</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="安装和设置-hexo-主题">安装和设置 Hexo 主题。</h2>
<p>此处以本博客使用的 typing 为例。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ hexo clean <span class="c1"># 清除缓存文件（db.json）和已经生成的静态文件（/public）。</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="安装主题">安装主题</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ <span class="nb">cd</span> &lt;folder&gt; <span class="c1"># 将 &lt;folder&gt; 改为你安装博客的路径</span>
    $ git clone https://github.com/geekplux/hexo-theme-typing themes/typing 
</code></pre></td></tr></table>
</div>
</div><h3 id="设置更新主题">设置、更新主题</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    theme: typing
</code></pre></td></tr></table>
</div>
</div><p>修改 Hexo 目录下 _config.yml 配置文件中的 theme 属性，将其设置为 typing 以启用主题。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ <span class="nb">cd</span> themes/typing
    $ git pull
    $ hexo g
    $ hexo s
</code></pre></td></tr></table>
</div>
</div><p>此时访问 http://localhost:4000/ 可以预览你更换的主题。</p>
<h2 id="配置博客">配置博客</h2>
<p>使用文本编辑工具打开 _config.xml，按需求修改文件内容。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    <span class="c1"># Site</span>
        title: Undercurrent <span class="c1"># 博客名称，网站标题</span>
        subtitle: Another blog. <span class="c1"># 副标题</span>
        description: <span class="c1"># 网站描述</span>
        author: Fan Rongbin <span class="c1"># 作者姓名</span>
        language: zh-CN <span class="c1"># 网站语言</span>
        timezone: Asia/Shanghai <span class="c1"># 网站所用时区</span>

    <span class="c1"># URL</span>
    <span class="c1">## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;</span>
		url: https://fanrongbin.com/ <span class="c1"># 网站网址</span>
        root: /
        permalink: :year/:month/:day/:title/
        permalink_defaults:
</code></pre></td></tr></table>
</div>
</div><p>注意：如果使用独立域名，请记得修改 url 的值为独立域名的网址。</p>
<h1 id="配置-github-pages">配置 GitHub Pages</h1>
<p>GitHub Pages 是一个免费的静态网站托管平台，既可以用于展示你在 GitHub 上的项目，也可以用来做个人博客。（国内有类似的服务 Coding Pages）</p>
<p>每个帐号只能有一个用于存放个人主页的仓库，命名必须为 username/username.github.io，创建后的主页将通过 <a href="http://username.github.io/" target="_blank" rel="noopener noreffer">http://username.github.io/</a> 来访问。</p>
<h2 id="连接-github">连接 GitHub</h2>
<h3 id="创建-ssh-key">创建 SSH Key</h3>
<p>检查电脑上现有的 SSH key。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ <span class="nb">cd</span> ~/.ssh
</code></pre></td></tr></table>
</div>
</div><p>如果已经存在 key 文件，备份旧的文件并删除它。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ ls config id_rsa id_rsa.pub  known_hosts
    $ mkdir key_backup
    $ cp id_rsa* key_backup
    $ rm id_rsa*
</code></pre></td></tr></table>
</div>
</div><p>生成新的 SSH Key</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ ssh-keygen -t -rsa -C “youremail@youremail.com” <span class="c1"># 将引号内内容改为你的电子邮件。</span>
    Generating public/private rsa key pair.
    Enter file in which to save the key <span class="o">(</span>/Users/your_user_directory/.ssh/id_rsa<span class="o">)</span>: <span class="c1"># 如果你需要将 key 文件放在不同路径请键入，无特殊情况请直接回车。</span>
    Enter passphrase <span class="o">(</span>empty <span class="k">for</span> no passphrase<span class="o">)</span>: <span class="c1"># 输入加密串。</span>
    Enter same passphrase agian: <span class="c1"># 再次输入。</span>
</code></pre></td></tr></table>
</div>
</div><p>最后可以看到</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    Your identification has been saved in
    /Users/your_user_directory/.ssh/id_rsa.
    Your public key has been saved in
    /Users/your_user_directory/.ssh/id_rsa.pub.
    The key fingerprint is:
    The key’s randomart image is:
</code></pre></td></tr></table>
</div>
</div><p>表示成功设置 SSH Key。</p>
<h3 id="添加-ssh-key-到-github">添加 SSH Key 到 GitHub</h3>
<p>用文本编辑工具打开 id_rsa.pub 文件，如果找不到该文件，注意本机是否已经设置显示隐藏文件。复制这个文件中所有的文本内容。</p>
<p>打开 GitHub 主页，点击头像，点击 Settings 进入设置。选择左侧的 SSH and GPG keys，点击 New SSH key。将复制的内容粘贴在 Key 一栏中，设置一个 Title（可以为本机名称）后点击 Add SSH key 即成功添加。</p>
<p>如果需要配置多个 GitHub 帐号，请参考此文章：<a href="https://www.cnblogs.com/mackxu/p/ssh-keygen.html/" target="_blank" rel="noopener noreffer">多个 github 帐号的 SSH key 切换</a>。</p>
<p>测试设置是否成功：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ ssh -T git@github.com
</code></pre></td></tr></table>
</div>
</div><p>如果出现：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    The authenticity of host <span class="s1">&#39;github.com (207.97.227.239)&#39;</span> can<span class="err">&#39;</span>t be established.
    RSA key fingerprint is …
    Are you sure you want to <span class="k">continue</span> connecting <span class="o">(</span>yes/no<span class="o">)</span>?
</code></pre></td></tr></table>
</div>
</div><p>此时输入 yes 即可：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    Hi &lt;username&gt;! You<span class="err">&#39;</span>ve successfully authenticated, but GitHub does not provide shell access.
</code></pre></td></tr></table>
</div>
</div><h3 id="在-git-中配置帐号">在 Git 中配置帐号</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ git config --global user.name <span class="s2">&#34;你的名字&#34;</span>
    $ git config --global user.email <span class="s2">&#34;your_email@youremail.com&#34;</span>
</code></pre></td></tr></table>
</div>
</div><p>注意：使用的名字不是你在 GitHub 中的昵称。</p>
<h2 id="创建-github-pages">创建 GitHub Pages</h2>
<p>点击右上角的加号选择 New repository，进入页面填写 Repository name 为 username.github.io，注意不要填写错误。选择 Public，点击 Create repository 即完成创建。</p>
<p></p>
<h1 id="部署-hexo-到-github-pages">部署 Hexo 到 GitHub Pages</h1>
<h2 id="使用-hexo-deploy">使用 hexo deploy</h2>
<p>安装拓展：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ npm install hexo-deployer-git --save
</code></pre></td></tr></table>
</div>
</div><p>将配置文件修改为如下形式：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    deploy:
        type: git
        repo: git@github.com:username/username.github.io.git
        branch: master
</code></pre></td></tr></table>
</div>
</div><p>然后在命令行中执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ hexo d
</code></pre></td></tr></table>
</div>
</div><p>完成部署。</p>
<h2 id="使用-git">使用 git</h2>
<p>将之前创建的 repository 克隆到本地并新建用于存放克隆的文件夹 .deploy：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    $ <span class="nb">cd</span> &lt;folder&gt; <span class="c1"># 博客所在路径</span>
    $ git clone https://github.com/username/username.github.io .deploy/username.github.io
</code></pre></td></tr></table>
</div>
</div><p>创建 deploy 脚本文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">    hexo g <span class="c1"># 生成新的静态文件</span>
    cp -R public/* .deploy/username.github.io <span class="c1"># 将新文件拷贝到 git 目录下</span>
    <span class="nb">cd</span> .deploy/username.github.io
    git add .
    git commit -m “update”
    git push origin master <span class="c1"># 提交代码到主分支</span>
</code></pre></td></tr></table>
</div>
</div><p>在以后需要部署时只需执行这段脚本（可以将脚本保存为 deploy.sh）。执行过程中可能需要输入 GitHub 帐号密码，按提示一步一步来即可。</p>
<h1 id="绑定独立域名">绑定独立域名</h1>
<p>首先你需要有一个独立域名，可以通过 <a href="https://godaddy.com/" target="_blank" rel="noopener noreffer">Godaddy</a> 或<a href="https://www.net.cn/" target="_blank" rel="noopener noreffer">阿里云-万网</a>来购买。这里以万网为例。</p>
<p></p>
<p>进入 repository 的 Settings，向下滚动找到 Custom domain，输入你的域名，点击 Save 保存。</p>
<p>登录阿里云，进入控制台，依次点击域名与网站（万网）→域名，找到你的域名，点击右侧的「解析」。添加一条 CNAME 指向 username.github.io。如果想要设置 apex domain（即无 www 前缀的网址）请添加两条 A 记录：</p>
<pre><code>将主机记录设置为 @
将记录值分别设置为：
192.30.252.153
192.30.252.154
</code></pre>
<p></p>
<p>等候约三到五分钟即可应用本次更改。</p>
<h1 id="使用-github-与-lets-encrypt-提供的-ssl-服务">使用 Github 与 Let’s Encrypt 提供的 SSL 服务</h1>
<p>虽然 Github 早在 2016 年为 GitHub Pages 添加了 HTTPS 支持，但自定义域名开启 HTTPS 却是一件令人头疼的事情。 直接用 https 链接访问自定义域名会出现证书错误（这是因为 Github 提供的 SSL 证书指向的域名是 *.github.com 和 *.github.io，而不是我们绑定的域名），只能使用 Cloudflare 之类的支持 Universal SSL 的 CDN 曲线支持 HTTPS 。</p>
<p>如果你之前使用了 Cloudflare 提供的 SSL 服务，请登录 Cloudflare 用户中心暂停或停止服务。</p>
<p></p>
<p>如果未使用其他 CDN，请回到域名注册商域名解析设置处，将原有 A 记录及 www 前缀的 CNAME 记录中的 IP 地址修改为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">		A 185.199.108.153
		A 185.199.109.153
		A 185.199.110.153
		A 185.199.111.153
		CNAME www 185.199.108.153
		CNAME www 185.199.109.153
		CNAME www 185.199.110.153
		CNAME www 185.199.111.153
</code></pre></td></tr></table>
</div>
</div><p>请进入 *.github.io repository 的 Settings 中，清空原有自定域名点击 Save，待页面刷新后再次输入自定域名保存。待解析成功即自动带上 https 啦。</p>
<p></p>
<h1 id="使用-cloudflare-提供的-ssl-服务">使用 Cloudflare 提供的 SSL 服务</h1>
<p>由于 GitHub Pages 本身不支持上传 SSL 证书（截至 2018.2），我们可以使用 Cloudflare 提供的免费 CDN，利用反向代理实现全站 https。</p>
<p>注册并登录 Cloudflare，点击 Add Site 以添加自己的网站。输入网址后点击 Begin Scan 便会开始扫描网站的解析记录。点击 Continue Setup 以继续。</p>
<p></p>
<p>Cloudflare 会默认把需要使用 CDN 服务的记录勾选，确认 A 记录和 CNAME 记录右侧的云朵图案均点亮为橙色后点击 Continue 继续下一步操作。</p>
<p></p>
<p>选择 Free Plan。</p>
<p></p>
<p>回到阿里云-万网，进入控制台，依次点击域名与网站（万网）→域名，点击域名右侧的「管理」进入域名控制台。点击右侧的「DNS 修改」，将默认 DNS 替换为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">	arnold.ns.cloudflare.com
	ruth.ns.cloudflare.com
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>等候约三到五分钟即可应用本次更改，你可以在 Cloudflare 查看应用情况。</p>
<h1 id="参考文章">参考文章</h1>
<ul>
<li><a href="http://beiyuu.com/github-pages/" target="_blank" rel="noopener noreffer">使用 Github Pages 建独立博客</a></li>
<li><a href="http://jiji262.github.io/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="noopener noreffer">手把手教你使用 Hexo + Github Pages 搭建个人独立博客</a></li>
<li><a href="https://poplite.xyz/post/2018/05/03/how-to-enable-https-for-custom-domain-on-github-pages.html" target="_blank" rel="noopener noreffer">Github Pages 开始为自定义域名提供 HTTPS 支持（附启用方法）</a></li>
</ul>
]]></description>
</item></channel>
</rss>
