<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Rongbin&#39;s Blog</title>
        <link>https://fanrongbin.com/</link>
        <description>Rongbin&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>fanrongbin0201@gmail.com (FAN Rongbin)</managingEditor>
            <webMaster>fanrongbin0201@gmail.com (FAN Rongbin)</webMaster><lastBuildDate>Fri, 31 Dec 2021 22:48:59 &#43;0800</lastBuildDate>
            <atom:link href="https://fanrongbin.com/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>C&#43;&#43; 模版类重载流输入输出运算符</title>
    <link>https://fanrongbin.com/cpp-template-friend/</link>
    <pubDate>Fri, 31 Dec 2021 22:48:59 &#43;0800</pubDate><author>
        <name>FAN Rongbin</name>
    </author><guid>https://fanrongbin.com/cpp-template-friend/</guid>
    <description><![CDATA[<p>在 C++ 中只能通过友元函数来重载流输入输出运算符 <code>&lt;&lt;</code> <code>&gt;&gt;</code>。由于搭配模板类的使用，编译器可能在对应编译友元函数时<strong>无法确定</strong>其为模版，需要事先声明。</p>
<h2 id="方法-1提前声明并使用--确认">方法 1：提前声明并使用 &lt;&gt; 确认</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp"></span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="c1">//需要提前进行声明，以使类中对友元函数的声明进一步确认函数为模板函数
</span><span class="c1"></span><span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">complex</span><span class="p">;</span>
<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span> <span class="n">ostream</span> <span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">ostream</span> <span class="o">&amp;</span><span class="n">newout</span><span class="p">,</span> <span class="k">const</span> <span class="n">complex</span><span class="o">&lt;</span><span class="n">A</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">);</span>

<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span>
<span class="k">class</span> <span class="nc">complex</span><span class="p">{</span> <span class="c1">//以复数类为例
</span><span class="c1"></span>  <span class="k">private</span><span class="o">:</span>
  	<span class="n">A</span> <span class="n">real</span><span class="p">,</span> <span class="n">image</span><span class="p">;</span>
	<span class="k">public</span><span class="o">:</span>
		<span class="n">complex</span><span class="p">(</span><span class="n">A</span> <span class="n">a</span><span class="p">,</span> <span class="n">A</span> <span class="n">b</span><span class="p">)</span><span class="o">:</span><span class="n">real</span><span class="p">(</span><span class="n">a</span><span class="p">),</span><span class="n">image</span><span class="p">(</span><span class="n">b</span><span class="p">){</span>
		<span class="p">}</span>

<span class="c1">//在运算符 &lt;&lt; 后加入 &lt;&gt; 以帮助编译器进一步确定该友元函数为模板函数
</span><span class="c1"></span>		<span class="k">friend</span> <span class="n">ostream</span> <span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="o">&lt;&gt;</span><span class="p">(</span><span class="n">ostream</span> <span class="o">&amp;</span><span class="n">newout</span><span class="p">,</span> <span class="k">const</span> <span class="n">complex</span><span class="o">&lt;</span><span class="n">A</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">);</span> 
<span class="p">};</span> 

<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span>
<span class="n">ostream</span> <span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">ostream</span> <span class="o">&amp;</span><span class="n">newout</span><span class="p">,</span> <span class="k">const</span> <span class="n">complex</span><span class="o">&lt;</span><span class="n">A</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">){</span>
	<span class="n">newout</span><span class="o">&lt;&lt;</span><span class="s">&#34;(&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">real</span><span class="o">&lt;&lt;</span><span class="s">&#34;,&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">image</span><span class="o">&lt;&lt;</span><span class="s">&#34;)&#34;</span><span class="p">;</span>
	<span class="k">return</span> <span class="n">newout</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">complex</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">a</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span> 
</code></pre></td></tr></table>
</div>
</div><h2 id="方法-2在声明友元函数的同时定义友元函数">方法 2：在声明友元函数的同时定义友元函数</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp"></span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span>
<span class="k">class</span> <span class="nc">complex</span><span class="p">{</span>
	<span class="k">private</span><span class="o">:</span>
		<span class="n">A</span> <span class="n">real</span><span class="p">,</span> <span class="n">image</span><span class="p">;</span>
	<span class="k">public</span><span class="o">:</span>
		<span class="n">complex</span><span class="p">(</span><span class="n">A</span> <span class="n">a</span><span class="p">,</span> <span class="n">A</span> <span class="n">b</span><span class="p">)</span><span class="o">:</span><span class="n">real</span><span class="p">(</span><span class="n">a</span><span class="p">),</span><span class="n">image</span><span class="p">(</span><span class="n">b</span><span class="p">){</span>
		<span class="p">}</span>

<span class="c1">//在声明友元函数的同时定义友元函数
</span><span class="c1"></span>		<span class="k">friend</span> <span class="n">ostream</span> <span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">ostream</span> <span class="o">&amp;</span><span class="n">newout</span><span class="p">,</span> <span class="k">const</span> <span class="n">complex</span><span class="o">&lt;</span><span class="n">A</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">){</span>
			<span class="n">newout</span><span class="o">&lt;&lt;</span><span class="s">&#34;(&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">real</span><span class="o">&lt;&lt;</span><span class="s">&#34;,&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">image</span><span class="o">&lt;&lt;</span><span class="s">&#34;)&#34;</span><span class="p">;</span>
			<span class="k">return</span> <span class="n">newout</span><span class="p">;</span>
		<span class="p">}</span>
<span class="p">};</span> 

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">complex</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">a</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span> 
</code></pre></td></tr></table>
</div>
</div><h2 id="如果可以不使用友元函数">如果可以不使用友元函数</h2>
<p>如果模板类中的成员为公有，则完全不需要在模板类中声明友元。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp"></span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span>
<span class="k">class</span> <span class="nc">complex</span><span class="p">{</span>
	<span class="k">public</span><span class="o">:</span>
		<span class="n">A</span> <span class="n">real</span><span class="p">,</span> <span class="n">image</span><span class="p">;</span> <span class="c1">//成员为公有
</span><span class="c1"></span>		<span class="n">complex</span><span class="p">(</span><span class="n">A</span> <span class="n">a</span><span class="p">,</span> <span class="n">A</span> <span class="n">b</span><span class="p">)</span><span class="o">:</span><span class="n">real</span><span class="p">(</span><span class="n">a</span><span class="p">),</span><span class="n">image</span><span class="p">(</span><span class="n">b</span><span class="p">){</span>
		<span class="p">}</span>
<span class="c1">//		friend ostream &amp; operator &lt;&lt; &lt;&gt;(ostream &amp;newout, const complex&lt;A&gt; &amp;m);
</span><span class="c1">//友元在此是不必要的
</span><span class="c1"></span><span class="p">};</span> 

<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span>
<span class="n">ostream</span> <span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">ostream</span> <span class="o">&amp;</span><span class="n">newout</span><span class="p">,</span> <span class="k">const</span> <span class="n">complex</span><span class="o">&lt;</span><span class="n">A</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">){</span>
	<span class="n">newout</span><span class="o">&lt;&lt;</span><span class="s">&#34;(&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">real</span><span class="o">&lt;&lt;</span><span class="s">&#34;,&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">image</span><span class="o">&lt;&lt;</span><span class="s">&#34;)&#34;</span><span class="p">;</span>
	<span class="k">return</span> <span class="n">newout</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">complex</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">a</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span> 
</code></pre></td></tr></table>
</div>
</div><h2 id="参考">参考</h2>
<ul>
<li><a href="https://isocpp.org/wiki/faq/templates#template-friends" target="_blank" rel="noopener noreffer">Why do I get linker errors when I use template friends? - Standard C++</a></li>
</ul>
]]></description>
</item><item>
    <title>2021 年终：昨天一直是今天，就像今天一直是明天</title>
    <link>https://fanrongbin.com/yesterday-is-today-is-tomorrow/</link>
    <pubDate>Fri, 31 Dec 2021 20:51:59 &#43;0800</pubDate><author>
        <name>FAN Rongbin</name>
    </author><guid>https://fanrongbin.com/yesterday-is-today-is-tomorrow/</guid>
    <description><![CDATA[<p>我想了很久，因为两年过得像一年。翻了翻手机相册，还是放弃了理顺今年「所作所为」的念头，意义不大。明天开始的新一年，似乎也将和过去的十二个月，在巨大的混凝土运送车里保持匀速搅拌，作为一大团不至于凝固的泥巴。</p>
<p>已经对新冠脱敏，指不论是日增或新变种的消息，或者突然的封校封城，在生理和心理上不为所动。其实也不仅是疫情，整体上对很多事物都看开了很多，离开了很多过去被动或主动设下的困境，或者说从源头开始避免。现在常是这样的状态，在不相调和时，我先选择离开，停止消耗，这样才能更好地拥抱自己。</p>
<p>但这种改变的确是懦弱的、畏怯的，是不能也不值得美化的。总不是束手无策的，必须承认。</p>
<p>很恍然，对明年原来没有什么特别的期待，这样的一个好处是对目标和进度的把控拉得更近了，就像在触控板上将拇指和食指收拢再分开。还有是继续向内走。我觉得这个不仅仅是我，也是这两年之后许多人或多或少都会有的行动，面对自身的时间多了，出现从复杂往简单调转的诉求。另一个好处是停止对自己预期看涨，幻想多头，这个应该是影响最大的。</p>
<p>困扰我许久的那种感受，在接连读了项飙老师的访谈录《把自己作为方法》以及《正午故事 1》中另一篇对谈后有了新的把握，「悬浮」与「错置」，都在慢慢展开的脱敏中渐渐从裹挟里剥离。还有就是大概保持着每三个月跟家人吵一次架的频率，把话讲开了。</p>
<p>这么看来，今年的收获还挺大。</p>
<p>今年听到比较有启发的播客节目有《新闻实验室》关于非虚构写作的第 17 期（《正午故事》郭玉洁，端传媒张洁平）和第 19 期（《正面连接》梁鸣），以及《晚风说》智堡 Mikko 和 Yachak 来的两期。无意中发现的《暮酒朝谈》，也给我很多帮助。</p>
<p>今年听到最喜欢的新专辑有：Yu Su《Yellow River Blue》、Mndsgn《Rare Pleasure》、Daniel Avery《Together in Static》、Ultraísta《Sister》、hikaru yamada and metal casting jazz ensemble《moon》、李遐怡《4 ONLY》、Leon Bridges《Gold-Diggers Sound》、Tinashe《333》。</p>
<p align="right">2021 年 12 月 31 日</p>
<hr>
<iframe src="https://embed.podcasts.apple.com/cn/podcast/%E6%9A%AE%E9%85%92%E6%9C%9D%E8%B0%88/id1521684443?itsct=podcast_box_player&amp;itscg=30200&amp;ls=1&amp;theme=auto" height="450px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *;" style="width: 100%;  overflow: hidden; border-radius: 10px; background: transparent;"></iframe>
<hr>
<iframe allow="autoplay *; encrypted-media *; fullscreen *" frameborder="0" height="450" style="width:100%;overflow:hidden;background:transparent;" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation" src="https://embed.music.apple.com/cn/album/yellow-river-blue/1546173813"></iframe>
<hr>
<blockquote>
<p>什么是蹲下起身时眼前的洁白，什么是动物园的房间。不当一切真的命中注定，指认所有被构造的一切，要声称自己是罪人，在跌落旧关卡时搜集证据。这会是水的流动，这会是卡在鞋底细缝中风干的叶片碎末，这会是酸胀的小腿和脉冲。这就是真的，这就是假的，这一直是一场戏，我一直在剧院里走走停停。很多个分成好几段陆续死去，有些是谋杀，有些是自杀，有些出于意外，一个死了，另一个被迫接着出现，不是任何人的错，新的来了。草丛里经常种下过去拯救自己的毒药，送给兔子，他们就能帮忙消化成脚印，铺在路上，以至于再试图向前爬去时，手指所沾上的只是兔子的粪便、毒药的沉淀，膝盖磨出来的血就不会看得见，路看上去也不会太远。以至于又是一种曼妙的错觉，支撑这生死的流变。</p>
<p align="right">2021 年 12 月 20 日</p>
</blockquote>
]]></description>
</item><item>
    <title>来自 Apple 的流媒体推广工具</title>
    <link>https://fanrongbin.com/apple-media-service-marketing/</link>
    <pubDate>Sat, 04 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>FAN Rongbin</name>
    </author><guid>https://fanrongbin.com/apple-media-service-marketing/</guid>
    <description><![CDATA[<p>Apple 分别在今年 9 月、去年 11 月和去年 7 月发布了用于 iOS 应用、播客和 Apple Music 推广的工具，以帮助开发者迅速创建赏心悦目、符合 Apple 设计规范的推广用图和网页内嵌模块。现在还包括 Arcade、News 和 TV，已经是完全搭建起整个适用于 Apple 媒体服务的推广工具平台。你可以<a href="https://tools.applemediaservices.com/" target="_blank" rel="noopener noreffer">按此访问 Apple Services Marketing Tools</a>。</p>
<p>和订阅制播客一并发布的还有 <a href="https://podcaster.apple.com/" target="_blank" rel="noopener noreffer">Apple Podcasts for Creators</a>，方便制作者查看收听数据等信息。</p>
<p>这里给出几个嵌入实例：</p>
<p>Apple Podcast：</p>
<iframe src="https://embed.podcasts.apple.com/us/podcast/%E4%BB%8E%E8%8F%9C%E8%A1%97%E5%88%B0%E5%8E%A8%E6%88%BF-07%E6%88%90%E5%B9%B4%E4%BA%BA%E7%9A%84%E6%88%90%E7%98%BE%E7%89%A9%E8%B4%A8-%E8%8C%B6%E5%92%8C%E5%92%96%E5%95%A1/id1585465479?i=1000537928836&amp;itsct=podcast_box_player&amp;itscg=30200&amp;ls=1&amp;theme=auto" height="175px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *;" style="width: 100%; overflow: hidden; border-radius: 10px; background: transparent;"></iframe>
<p>实际上会自动判断访问者所在地区。例如这是一个未在中国大陆上架的播客，显示内容不可用。下面的 Apple TV 也如此。</p>
<iframe src="https://embed.podcasts.apple.com/us/podcast/fokcast-%E7%94%98%E7%A5%BA%E6%B5%81%E8%A1%8C-%E9%A6%99%E6%B8%AFpodcast/id1546976247?itsct=podcast_box_player&amp;itscg=30200&amp;ls=1&amp;theme=auto" height="450px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *;" style="width: 100%; overflow: hidden; border-radius: 10px; background: transparent;"></iframe>
<p>Apple Music：</p>
<iframe src="https://embed.music.apple.com/us/album/tellusboutyourself/1543102982?app=music&amp;itsct=music_box_player&amp;itscg=30200&amp;ls=1" height="450px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *;" style="width: 100%; overflow: hidden; border-radius: 10px; background: transparent;"></iframe>
<p>Apple TV：</p>
<iframe src="https://embed.tv.apple.com/us/show/snoopy-in-space-the-search-for-life/umc.cmc.12l86ri6vfjlimw2m8b8dzszs?itscg=30200&amp;itsct=tv_box_player" height="371px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *;" style="width: 100%; max-width: 660px; border-radius: 10px; background: transparent;"></iframe>
<p>Apple Store 推广用图：</p>

<p>挺好看的。</p>
]]></description>
</item><item>
    <title>C&#43;&#43; 中的拷贝构造函数：浅拷贝、深拷贝</title>
    <link>https://fanrongbin.com/cpp-copy-constructor/</link>
    <pubDate>Mon, 29 Nov 2021 00:00:00 &#43;0000</pubDate><author>
        <name>FAN Rongbin</name>
    </author><guid>https://fanrongbin.com/cpp-copy-constructor/</guid>
    <description><![CDATA[<h2 id="什么时候会调用拷贝构造函数">什么时候会调用拷贝构造函数</h2>
<ul>
<li>一个对象以<strong>值传递</strong>的方式<strong>传入函数体</strong></li>
<li>一个对象以<strong>值传递</strong>的方式<strong>从函数返回</strong></li>
<li>一个对象<strong>通过另一个对象</strong>以进行<strong>初始化</strong></li>
</ul>
<h2 id="默认拷贝构造函数浅拷贝深拷贝">默认拷贝构造函数：浅拷贝/深拷贝</h2>
<p>即：将被拷贝对象的数据成员的值一一赋值给新创建的对象</p>
<ul>
<li>如果数据成员中有指针成员
<ul>
<li><strong>浅拷贝只是增加了一个指针指向已经存在的内存</strong></li>
<li>则<strong>新对象的指针所指向的地址</strong>与<strong>被拷贝对象的指针所指向的地址</strong>相同</li>
<li>则析构 delete 对象时会重复 delete 两次同一个内存空间而出错</li>
</ul>
</li>
</ul>
<h3 id="实例">实例</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="k">class</span> <span class="nc">Rect</span><span class="p">{</span>
<span class="k">private</span><span class="o">:</span>
		<span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>     <span class="c1">// 一指针成员
</span><span class="c1"></span><span class="k">public</span><span class="o">:</span>
    <span class="n">Rect</span><span class="p">(){</span>      <span class="c1">// 构造函数，p 指向堆中分配的一内存
</span><span class="c1"></span>        <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span> <span class="c1">// new 动态分配
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="o">~</span><span class="n">Rect</span><span class="p">(){</span>     <span class="c1">// 析构函数，释放动态分配的内存
</span><span class="c1"></span>        <span class="k">if</span><span class="p">(</span><span class="n">p</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">){</span>
            <span class="k">delete</span> <span class="n">p</span><span class="p">;</span> <span class="c1">// delete 释放 p 所指向的内存
</span><span class="c1"></span>        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">Rect</span> <span class="n">rect1</span><span class="p">;</span>
    <span class="n">Rect</span> <span class="n">rect2</span><span class="p">(</span><span class="n">rect1</span><span class="p">);</span>   <span class="c1">// 拷贝 rect1 来构造 rect2
</span><span class="c1"></span>		<span class="c1">// 也即： Rect rect2 = rect1;
</span><span class="c1"></span>		<span class="c1">// 浅拷贝，将成员的值进行拷贝 rect2.p = rect1.p （地址 = 地址）
</span><span class="c1"></span>
		<span class="c1">// 会出现错误
</span><span class="c1"></span>		<span class="c1">// 在 delete 时既要 delete rect2.p 指向的空间，又要 delete rect1.p 指向的内存。但这是同一个内存（地址 = 地址），导致同一个内存被释放两次
</span><span class="c1"></span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同时还造成另外两个错误：</p>
<ul>
<li><code>rect2.p</code> 在初始化时新建的 <code>p</code> 所指向的内存没被释放（因为构造函数新建之后，又直接值传递换了地址），造成内存泄漏</li>
<li><code>rect2.p</code>（指针） 和 <code>rect1.p</code>（指针）指向同一块内存（同一个地址），任何一方的变动都会影响另一方</li>
</ul>
<h2 id="自行新建拷贝构造函数并使用深拷贝">自行新建拷贝构造函数：并使用深拷贝</h2>
<p>新增加一个指针，并申请一个新的内存。新指针指向新内存。</p>
<h3 id="实例-1">实例</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="k">class</span> <span class="nc">Rect</span><span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>			<span class="c1">// 一指针成员
</span><span class="c1"></span>    <span class="n">Rect</span><span class="p">(){</span>     <span class="c1">// 构造函数，p指向堆中分配的一内存
</span><span class="c1"></span>        <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">Rect</span><span class="p">(</span><span class="k">const</span> <span class="n">Rect</span> <span class="o">&amp;</span><span class="n">r</span><span class="p">){</span> <span class="c1">// 自行新建拷贝构造函数
</span><span class="c1"></span>        <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">;</span>     <span class="c1">// 为新对象重新动态分配内存
</span><span class="c1"></span>        <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="o">*</span><span class="n">r</span><span class="p">.</span><span class="n">p</span><span class="p">;</span>
        <span class="c1">// 或带括号 *p = *(r.p);
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="o">~</span><span class="n">Rect</span><span class="p">(){</span>    <span class="c1">// 析构函数，释放动态分配的内存
</span><span class="c1"></span>        <span class="k">if</span><span class="p">(</span><span class="n">p</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">){</span>
            <span class="k">delete</span> <span class="n">p</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">Rect</span> <span class="n">rect1</span><span class="p">;</span>
    <span class="n">Rect</span> <span class="n">rect2</span><span class="p">(</span><span class="n">rect1</span><span class="p">);</span>		<span class="c1">// 拷贝 rect1 来构造 rect2
</span><span class="c1"></span>		<span class="c1">// 也即： Rect rect2 = rect1;
</span><span class="c1"></span>    <span class="c1">// 深拷贝，创建新的 p 以及其所指向的空间，然后把值赋过去 *r.p = *rect1.p; 然后 *rect2.p = *r.p;
</span><span class="c1"></span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>不妨输出地址比对一下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="k">class</span> <span class="nc">Rect</span><span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
    <span class="n">Rect</span><span class="p">(){</span>
        <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>
        <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&#34;start new: &#34;</span><span class="o">&lt;&lt;</span><span class="n">p</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span> <span class="c1">// 无参的新构造（初始化）时创建的内存空间
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="n">Rect</span><span class="p">(</span><span class="k">const</span> <span class="n">Rect</span> <span class="o">&amp;</span><span class="n">r</span><span class="p">){</span>
        <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">;</span>
        <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&#34;copy: &#34;</span><span class="o">&lt;&lt;</span><span class="n">p</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span> 			<span class="c1">// 拷贝构造时创建的内存空间
</span><span class="c1"></span>        <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="o">*</span><span class="n">r</span><span class="p">.</span><span class="n">p</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="o">~</span><span class="n">Rect</span><span class="p">(){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">p</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">){</span>
            <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&#34;de: &#34;</span><span class="o">&lt;&lt;</span><span class="n">p</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span> 		<span class="c1">// 所析构掉的内存空间
</span><span class="c1"></span>            <span class="k">delete</span> <span class="n">p</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">Rect</span> <span class="n">rect1</span><span class="p">;</span>
    <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">rect1</span><span class="p">.</span><span class="n">p</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>		<span class="c1">// rect1.p 指向的内存空间
</span><span class="c1"></span>    <span class="n">Rect</span> <span class="n">rect2</span><span class="p">(</span><span class="n">rect1</span><span class="p">);</span>			<span class="c1">// 拷贝 rect1 来构造 rect2
</span><span class="c1"></span>    <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">rect2</span><span class="p">.</span><span class="n">p</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>		<span class="c1">// rect2.p 指向的内存空间
</span><span class="c1"></span>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>输出得：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">start new: 0x10582d930
0x10582d930
copy: 0x10582f220
0x10582f220
de: 0x10582f220
de: 0x10582d930
Program ended with <span class="nb">exit</span> code: <span class="m">0</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="参考">参考</h2>
<ul>
<li><a href="https://blog.csdn.net/xunye_dream/article/details/77547438" target="_blank" rel="noopener noreffer">C语言中的位拷贝与值拷贝浅谈 - CSDN</a></li>
<li><a href="https://blog.csdn.net/lwbeyond/article/details/6202256" target="_blank" rel="noopener noreffer">C++拷贝构造函数详解 - CSDN</a></li>
</ul>
]]></description>
</item><item>
    <title>使用 matplotlib 遇到的几个问题</title>
    <link>https://fanrongbin.com/november-matplotlib/</link>
    <pubDate>Fri, 12 Nov 2021 00:00:00 &#43;0000</pubDate><author>
        <name>FAN Rongbin</name>
    </author><guid>https://fanrongbin.com/november-matplotlib/</guid>
    <description><![CDATA[<p>这周在用 matplotlib 画几张图。数据 csv 下载自 ECBStat 和 FRED。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib</span> <span class="k">as</span> <span class="nn">plt</span>
</code></pre></td></tr></table>
</div>
</div><p>首先是解决字符串转日期型的问题。<strong>我希望将日期作为横轴，而且显示合理。</strong></p>
<p>使用 <code>datetime</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">strptime</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="s1">&#39;%Y-%m-</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">date</span><span class="p">()</span> <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">example</span><span class="o">.</span><span class="n">date</span>

<span class="c1"># example.date 是我的 example.csv 文件中日期对应列。</span>

<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>更多时间处理参数，详见下方链接。</p>
<p>自动格式化：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plt</span><span class="o">.</span><span class="n">gcf</span><span class="p">()</span><span class="o">.</span><span class="n">autofmt_xdate</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li><a href="https://docs.python.org/zh-cn/3/library/datetime.html" target="_blank" rel="noopener noreffer">datetime - Python 3 中文文档</a></li>
<li><a href="https://blog.csdn.net/gty931008/article/details/80254806" target="_blank" rel="noopener noreffer">python之时间、日期处理模块（datetime）- CSDN</a></li>
</ul>
<p><strong>我希望定位一个具体日期，并用竖线标识。</strong> 这里用到<code>pandas</code>把我希望的具体日期转为时间戳。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plt</span><span class="o">.</span><span class="n">axvline</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Timestamp</span><span class="p">(</span><span class="s1">&#39;2014-06-30&#39;</span><span class="p">),</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;#000&#39;</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.axvline.html" target="_blank" rel="noopener noreffer">matplotlib.pyplot.axvline</a></li>
<li><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Timestamp.html" target="_blank" rel="noopener noreffer">pandas.Timestamp</a></li>
</ul>
<p></p>
<p><strong>我希望在一张图（单个文件）中同时展示多个图表</strong>，既可以用 <code>subplot</code>，也可以用 <code>GridSpec</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">211</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">time</span><span class="p">,</span> <span class="n">totalb</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">212</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">time</span><span class="p">,</span> <span class="n">conb</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>也可以：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plt</span><span class="o">.</span><span class="n">GridSpec</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">wspace</span><span class="o">=</span><span class="mf">.25</span><span class="p">,</span> <span class="n">hspace</span><span class="o">=</span><span class="mf">.25</span><span class="p">)</span>
<span class="n">ax1</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="n">grid</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">:</span><span class="mi">1</span><span class="p">])</span>
<span class="n">ax1</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">time</span><span class="p">,</span> <span class="n">totalb</span><span class="p">)</span>

<span class="n">ax2</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="n">grid</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">:</span><span class="mi">1</span><span class="p">])</span>
<span class="n">ax2</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">time</span><span class="p">,</span> <span class="n">conb</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>如何定义具体位置或查看更多实例，请见 <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.subplot.html?" target="_blank" rel="noopener noreffer">matplotlib.pyplot.subplot</a> 和 <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.gridspec.GridSpec.html#matplotlib.gridspec.GridSpec" target="_blank" rel="noopener noreffer">matplotlib.gridspec.GridSpec</a>。</p>
<p></p>
<p></p>
<p>参考了实例 <a href="https://matplotlib.org/stable/gallery/subplots_axes_and_figures/axes_zoom_effect.html" target="_blank" rel="noopener noreffer">Axes Zoom Effect</a>。</p>
]]></description>
</item><item>
    <title>eclipse, indices / indexes 与股价指数</title>
    <link>https://fanrongbin.com/eclipse-indices-indexes/</link>
    <pubDate>Tue, 02 Nov 2021 00:00:00 &#43;0000</pubDate><author>
        <name>FAN Rongbin</name>
    </author><guid>https://fanrongbin.com/eclipse-indices-indexes/</guid>
    <description><![CDATA[<p>北京时间今天早上的一则新闻：</p>
<blockquote>
<p>Nov 1 (Reuters) - Wall Street&rsquo;s main <strong>indexes</strong> notched record closing highs on Monday as Tesla shares surged and the energy sector gained while investors looked ahead to a major Federal Reserve meeting later in the week.</p>
<p>The Dow Jones Industrial Average (.DJI) <strong>eclipsed</strong> 36,000 points for the first time ever during intraday trading, ending just shy of that level.</p>
<p><a href="https://www.reuters.com/business/wall-street-hits-records-tesla-surges-focus-fed-meeting-2021-11-01/" target="_blank" rel="noopener noreffer">Reuters</a></p>
</blockquote>
<h2 id="eclipse">eclipse?</h2>
<p>eclipse 作动词除了天文上「遮住⋯⋯的光」即「食」（日食、月食）的意思、比较文学性的「使⋯⋯黯淡无光/黯然失色」的意思之外，还可以如引用所指，在商务英语中，表示在数量上或级别上「超过、高过」的意思。</p>
<p>下引剑桥词典：</p>
<blockquote>
<p><strong>to become greater in amount or level than something else:</strong></p>
<p><em>The increased consumer spending from new businesses has already helped shopping, dining, and real estate <strong>eclipse</strong> oil revenues.</em></p>
<p><em>Their stock is up 50% so far this year, as their profit growth is expected to <strong>eclipse</strong> that of larger companies.</em></p>
<p>(Definition of eclipse from <a href="https://dictionary.cambridge.org/dictionary/english/eclipse" target="_blank" rel="noopener noreffer">the Cambridge Business English Dictionary</a> © Cambridge University Press)</p>
</blockquote>
<h2 id="indices-或-indexes">indices 或 indexes?</h2>
<p>都可以，它们都是 index 的复数形式。indices 经常出现在在数学、统计学、金融学、科学等相关文章中，书面也经常用。北美用 indexes 更多，其他英语国家用 indices 更多。</p>
<h2 id="股票价格指数">股票价格指数</h2>
<p>股票价格指数（Stock Price Index）也即股票指数。其制定，以方便投资者了解多只股票价格的波动，进而也能反应市场的态势。进一步也能体现政治、社会的发展形势。</p>
<p>有多种编制方式：</p>
<h3 id="按覆盖范围分">按覆盖范围分：</h3>
<ul>
<li><strong>宽基指数</strong>（广基指数）（broad-based indices）
<ul>
<li>沪深 300，中证 500</li>
<li>道琼斯工业指数</li>
<li>标准普尔 500 指数</li>
</ul>
</li>
<li><strong>窄基指数</strong>（narrow-based indices）（行业/主题指数）
<ul>
<li>万得能源指数</li>
<li>台湾 50 指数</li>
<li>摩根士丹利生物技术指数</li>
</ul>
</li>
</ul>
<h3 id="按计算方式分不全">按计算方式分：（不全）</h3>
<ul>
<li>
<p><strong>价格加权指数</strong>（Price Weighting based indices）</p>
<p>成分股股价的简单算术平均。</p>
<ul>
<li>道琼斯工业指数</li>
<li>纽约证交所科技 100 指数</li>
<li>日经 225 指数（日经平均指数）</li>
</ul>
</li>
<li>
<p><strong>市值/股本/资本加权指数</strong>（Market-Capitalisation Weighting based indices）</p>
<p>给予的权重基于该股票<strong>市值</strong>在整个<strong>组合市值</strong>中的权重。</p>
<ul>
<li>中证 500 指数</li>
<li>标准普尔 500 指数</li>
<li>香港恒生指数</li>
</ul>
</li>
<li>
<p><strong>自由流通市值/股本加权指数</strong>（Free-float adjusted Market-Capitalisation Weighting based indices）</p>
<p>类似市值加权。但这里的市值使用流通市值，即可供公众交易的部分。</p>
<ul>
<li>沪深 300 指数</li>
</ul>
</li>
<li>
<p><strong>等权重加权指数（无权重指数）</strong>（Equal Weighting based indices）</p>
<p>给予所有的成分股票以相同的权重，即假设每只成分股都购买了相同的金额。</p>
<ul>
<li>巴伦 400 指数</li>
<li>标普 500 等权重指数</li>
</ul>
</li>
<li>
<p><strong>基本面加权指数</strong>（Fundamentally based indices）</p>
<p>通常以公司的基本面（销售收入、现金流、分红等）为基础来分配个股的权重。</p>
<ul>
<li>上证 380 基本面加权指数</li>
<li>富时 RAFI 指数系列</li>
</ul>
</li>
<li>
<p><strong>因子指数</strong>（Factor Weighting based indices）</p>
<p>用以反映特定因子特性的绩效。（如股票价值、企业质量、红利、风险等）</p>
<ul>
<li>富时环球因子指数系列</li>
<li>标普中国 A 股低波红利指数</li>
</ul>
</li>
<li>
<p><strong>波动率加权指数</strong>（Volatility Weighting based indices）</p>
<ul>
<li>芝加哥期权交易所市场波动率指数（恐慌指数 CBOE Volatility Index, ^VIX）</li>
</ul>
</li>
<li>
<p><strong>最小方差指数</strong>（Minimum Variance Weighting based indices）</p>
<p>以实现组合方差最小化为目标的指数。</p>
<ul>
<li>斯托克全球 1800 最小方差指数</li>
</ul>
</li>
</ul>
<h3 id="比较有代表性的指数">比较有代表性的指数</h3>
<h4 id="按地域">按地域</h4>
<ul>
<li>美国
<ul>
<li>标准普尔 500 指数（S&amp;P 500, ^GSPC）</li>
<li>道琼斯工业指数（Dow 30, ^DJI）</li>
<li>纳斯达克综合指数（Nasdaq, ^IXIC）</li>
</ul>
</li>
<li>亚洲
<ul>
<li>日经 225 指数（Nikkei 225, ^N225）</li>
<li>香港恒生指数（HANG SENG INDEX, ^HSI）</li>
<li>韩国综合股价指数（KOSPI Composite Index, ^KS11）</li>
<li>上证综合指数（SSE Composite Index, 000001.SS）</li>
<li>深证成份股指数（Shenzhen Component, 399001.SZ）</li>
</ul>
</li>
<li>欧洲
<ul>
<li>英国富时 100 指数（FTSE 100, ^FTSE）</li>
<li>法国 CAC 40 指数（CAC 40, ^FCHI）</li>
<li>德国 DAX 30 指数（DAX PERFORMANCE-INDEX, ^GDAXI）</li>
<li>欧洲斯托克 50 指数（ESTX 50 PR.EUR, ^STOXX50E）</li>
</ul>
</li>
</ul>
]]></description>
</item><item>
    <title>Engadget 简体中文版关闭</title>
    <link>https://fanrongbin.com/engadget-cn-closed/</link>
    <pubDate>Tue, 02 Nov 2021 00:00:00 &#43;0000</pubDate><author>
        <name>FAN Rongbin</name>
    </author><guid>https://fanrongbin.com/engadget-cn-closed/</guid>
    <description><![CDATA[<blockquote>
<p>2021 年 11 月 1 日起，用户无法从中国大陆使用 Yahoo 的产品与服务。这并不影响 Yahoo 在全球其他地方的产品及服务。</p>
<p>Yahoo 中国</p>
</blockquote>
<p>同时，Yahoo Weather（雅虎天气）宣布停止中国大陆服务，Engadget 简体中文版亦宣布停止更新。</p>
<p></p>
<p>Engadget 简体中文版（瘾科技）于 2005 年 10 月 1 日正式开站，触角广泛，文字亦精炼扼要。记得最初是在 Flipboard 或者 Zaker 上偶然订阅了 Engadget 中文版，它是我所接触到的第一个科技资讯媒体。后来陆陆续续地还订阅了 The Verge、TechCrunch，还有 LiveSino、月光博客。它们构成我的很多回忆。中间编辑团队一度更换，希望了解更多的话，可见文末。</p>
<p>现在的话，新资讯有赖于 Telegram 上的几个频道推送通知，产品测评的话看 YouTube 多一点（Dave2D、TESTV 等等），市场新闻、创投等也有比较集中的信源了。</p>
<p>关于团队更换：</p>
<ul>
<li><a href="https://chinese.engadget.com/chinese-2011-06-27-new-engadget-chinese.html" target="_blank" rel="noopener noreffer">《歡迎來到全新的 Engadget 中文版》</a> - Richard Lai@Engadget</li>
<li><a href="http://yblog.org/archive/index.php/aol_relocate_engadget_chinese_201106" target="_blank" rel="noopener noreffer">《Engadget 中文版與癮科技拆夥的可能內幕》</a>- 永遠的真田幸村</li>
</ul>
<p>祝新老成员未来都好。</p>
<p>正式开站纪念博文存档：</p>
<p></p>
]]></description>
</item><item>
    <title>QDII 与 QDII 基金买卖</title>
    <link>https://fanrongbin.com/qdii/</link>
    <pubDate>Sun, 31 Oct 2021 00:00:00 &#43;0000</pubDate><author>
        <name>FAN Rongbin</name>
    </author><guid>https://fanrongbin.com/qdii/</guid>
    <description><![CDATA[<p>现<strong>境内向境外</strong>进行合法投资（除境外直接投资 ODI、陆股通）的三种形式：</p>
<p></p>
<p>而<strong>境外向境内</strong>进行投资，可分直接投资和间接投资。QFII 和 RQFII 属于外资直接投资境内证券二级市场。其包括股息及买卖价差等在内的各种资本所得，经审核后可转换为外汇汇出。实际为对外资有限度地开放境内的证券市场。</p>
<p></p>
<p></p>
<p>QDII 基金，即从事境外证券市场的股票、债券等有价证券业务的证券投资基金。也就是 QDII 中合格的基金公司以设立基金的方式进行募资，进而在境外投资。</p>
<p>在国内购买 QDII 基金的目的，主要在于分散单一市场可能的风险。</p>
<h2 id="主要子分类">主要子分类</h2>
<ul>
<li>主动股票型</li>
<li>指数型</li>
<li>债券型</li>
<li>混合型</li>
<li>另类投资型
<ul>
<li>大宗商品型</li>
<li>房地产信托型 REITs</li>
<li>绝对收益型</li>
<li>资产配置型 FOF</li>
</ul>
</li>
</ul>
<h2 id="t2-交易规则">T+2 交易规则</h2>
<p>只投资港股的 QDII 基金遵循 T+1 交易规则，包括美股的 QDII 基金遵循 T+2 交易规则。</p>
<p>美股交易时间（除节假日等休市日）：</p>
<p></p>
<p>而 QDII 基金遵循国内交易时间（除节假日等休市日）：即周一至周五 9:30-11:30，13:00-15:00。</p>
<p><strong>境内外</strong>节假日休市都暂停申购、赎回。</p>
<p><strong>买入延迟</strong>：在国内交易时间买入，需要等美股收盘后（第二天）按其收盘价计算买入份额。</p>
<p><strong>基金净值更新延迟</strong>：美股凌晨收盘后，可见预估净值，但最终净值需待基金公司核准确认。但美股此时（第二天国内交易时间范围内）未开盘交易，无法计算净值，只能等第三天美股收盘后确认最终净值，确认买入份额。</p>
<p>相应地，<strong>份额更新延迟</strong>，<strong>收益更新延迟</strong>。</p>
<blockquote>
<p>在 2021 年 10 月 25 日周一 14:00（第一天盘前或交易时间内）买入某 QDII 基金，以 10 月 26 日周二 4:00（第二天）美股收盘价计算买入份额，在 10 月 27 日周三（第三天）更新净值，确认买入份额。在 10 月 28 日周四（第四天）可查看 T+1 日收益。赎回同理。
实际在周一看到的净值，是根据周日的行情。</p>
</blockquote>
<h2 id="低门槛高费率">低门槛、高费率</h2>
<p>通常 10 元起即可申购。</p>
<p>费率主要表现在<strong>管理费率</strong>上。</p>
<h2 id="风险">风险</h2>
<h3 id="交易风险">交易风险</h3>
<p>隔日计算，无法预知第二天的大盘情况。</p>
<h3 id="汇率风险">汇率风险</h3>
<p>情形：人民币兑美元贬值（又或美元自身走强），配置美元资产的 QDII 基金获得收益增强。</p>
<h3 id="流动性风险">流动性风险</h3>
<p>情形 1：QDII 基金申购踊跃，其本身因额度限制而暂停申购。</p>
<p>情形 2：美股节假日休市，亦无法申购赎回。</p>
<p>情形 3：未开放二级市场交易的某 QDII 基金，从赎回到到账需约 8-10 个工作日。</p>
]]></description>
</item><item>
    <title>建立健康的关系</title>
    <link>https://fanrongbin.com/healthy-relationship/</link>
    <pubDate>Fri, 13 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>FAN Rongbin</name>
    </author><guid>https://fanrongbin.com/healthy-relationship/</guid>
    <description><![CDATA[<p>同友人聊天，谈及河南暴雨，再到自疫情初至今仍层出不穷的呼救、求助，不约而同发问：「如果我或我身边的人也遇到这样的紧急事件，而依靠网络仍无法得到回应，该怎么办？」我有对城市生活多加警惕的意识吗？我知道发生山洪应该往哪里跑吗？我知道除了互联网之外的呼救途径吗？如果断水、断电、断网、断信号，该怎么办？</p>
<p>我们都不觉得这是杞人忧天，也不觉得活得自在豁达与多加警惕之间有任何冲突。只是觉得生命不能被肆意对待。尤其是在这不过一年间，见证了这么多生命的离开。</p>
<p>一开始 Apple 发布 Memoji 时，我在猜，是不是以后就真靠这么一个会动的头把「我」替代了？未来在动物森友会世界里归农，在 Gather Town 或者 Online Town 里上班。甚至想过《黑镜》里骑动感单车赚点数的生活只需要再优化一下，例如不要那么单一、再有创造力一些，会不会也是能接受的选项？</p>
<p>现在是惊醒了，要走一条反产业潮流的老路，不论如何要在真实世界里去建立健康的关系，这种关系除了是人与人之间的，更要包括和物件之间、和环境之间、和自己。</p>
<p>环境的改变会催生出很多东西，梭罗去瓦尔登湖，拉姆齐一家靠去灯塔作信念。被关在家里久了，看上去跟人的交流更多了，但真正「有效」的、面对面察言观色的、与分享超链接跳转无关的，其实大幅减少。要思考使用这些 IM 工具和平台的新方法。</p>
<p>我做了更多的运动，也看到居家健身市场的蓬勃发展；跑了更多的步，家门口的绿道，人多了起来，也维护得更好。保护环境的话题，这里不能再赘述，但有一问题希望引起反思：「享受城市生活便利的同时，对其保持警惕」。其实对于所有能带来便捷的东西都一样，或者都不用说是否带来便捷，只要是能让人养成如此的依赖，或者说太报以信任的东西，难道不都需要加以警惕吗？</p>
<p>常待的书桌被我架高，站着阅读或码字，至少让身体动得更多。喝的水更多了，饮食和作息上进步空间还很大。</p>
<p>我把家人手机上的 SOS 功能设置好，把当地的紧急电话加入通讯录，开始了解如何为家中配备急救包，了解在与外界完全隔绝的情况下什么是必需的。</p>
<p>这些是和物件、环境和自己之间的关系。</p>
<p>前些天看到 <a href="https://www.nytimes.com/2021/07/17/opinion/culture/social-media-cancel-culture-roxane-gay.html" target="_blank" rel="noopener noreffer">NYT 上一篇文章</a>，谈「为什么互联网上的人都那么糟」，简体中文互联网环境则更如是。除了庞大的基数，算法干预下再加一重 censor 与 business，以至于我们造成的争端比谁都多，进入沉思过程的少之又少，达成的结论更屈指可数。作者说他有时感觉被铺天盖地的新闻所淹没，我俨然像在极度正面与极度负面的两种情绪中溺亡了。</p>
<p>如果觉得自己是个「布道者」，继续这么做下去也无妨。但如果带来的创伤更多，那还是别做了。只要人人都幻想，那一天到不到来，没什么关系。</p>
<p>信源一简再简，关注「人」而少关注「事」。「关注事」的大把，挑一两个能把前因后果、来龙去脉讲清楚的已经很足够，部分评论作非自愿加餐。大力学习、深度学习能持续输出观点的人、能鞭辟入里又简明扼要讲话的人、友好型肯争论的异见持有者，如果这些人有些还在网上，那就接着看。有些在书里，就继续读。至于实在是 voluble，造成 vociferous 的，不看不就行了，别总以为少看点什么就会错过什么，错过的东西太多了，没看过没见识过的也太多了。记得第一次读《文学回忆录》，或者是第一次读《地理学与生活》，或者是第一次读《视差之见》，读得面红耳赤，读得「欲火焚身」。不要养成「每当做点什么，总要看评论/看眼色」的习惯。</p>
<p>我还更多地去阅读 Newsletter，虽然不是那个「一期一会」，但这种「一期」看「一会」也让我对早起（以阅读和做点自己的事）有了更大的兴趣和信心。方便 Archive，可以复制粘贴，也可以直接在收件箱标签。有的作者还设置了读者信箱，多好，这都是人与人的关系。</p>
<blockquote>
<p>But I have more of a life than I once did. I have a wife, a busy career, aging parents and a large family. I have more physical mobility and, in turn, more interest in being active and out in the world. I now spend most of my time with people who are not Very Online. When I talk to them about some weird or frustrating internet conflagration, they tend to look at me as if I am speaking a foreign language from a distant land. And, I suppose, I am.</p>
<p>Roxane Gay</p>
</blockquote>
<p>听 Solar Power，看乐评人批 Lorde 逃离现实又没有完全逃离。苛刻是他们的工作。我觉得这种微妙的、游走于这之间的平衡，太难找了。Lorde 找了几年，有了一点苗头，先跟大家说道说道，所以整张专辑显得文学性大过音乐性，一首接一首听起来不很连贯。（不过在这个时代，我们还那么讲究连贯吗？）我想我也应该寻找这属于我的平衡。</p>
<p>自知做不了太多，连家人有时都无法坐下来和平聊天。那也要做啊。</p>
<blockquote>
<p>Update: 2021/08/28</p>
</blockquote>
]]></description>
</item><item>
    <title>Winslow Homer 温斯洛·霍默</title>
    <link>https://fanrongbin.com/winslow-homer/</link>
    <pubDate>Sun, 08 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>FAN Rongbin</name>
    </author><guid>https://fanrongbin.com/winslow-homer/</guid>
    <description><![CDATA[<blockquote>
<p>发布于 <a href="https://matters.news/@laefan/%E7%9C%8B%E7%95%AB-winslow-homer-%E6%BA%AB%E6%96%AF%E6%B4%9B-%E9%9C%8D%E9%BB%98-bafyreifjxdssns3s6xkf6t7lgk6jaxjrpxg4semolhembefe4o3mi2n4ja" target="_blank" rel="noopener noreffer">Matters.news</a>。</p>
</blockquote>
<p>首要的是，关注你自己最真实、直观冒出来的想法与情感。花上哪怕只是三五秒钟，先去观看和感受作品的本身。</p>
<p></p>
<p><em>Prout&rsquo;s Neck, Breakers</em>, 1883, Winslow Homer, Painting, watercolor on wove paper</p>
<p>Source: <a href="https://www.artic.edu/artworks/16815/prout-s-neck-breakers" target="_blank" rel="noopener noreffer">The Art Institute of Chicago</a></p>
<p>很偶然，从这幅画初次得知霍默大名，之后开始继续寻找他的画作，感叹于他融会贯通的技艺和想法。我其实不曾在阴天见过这样蓝的海浪，也许最接近画中景象的一次是在乔伊斯博物馆前的海角处。大概是被这种未曾见过的模样吸引着。</p>
<p>除了十分显然的深蓝、亮蓝叠加使用以塑造前后关系，还能看到他多利用了纸张本身的白色，例如下半部分近礁石的部分。这也是水彩常用的方法。整幅画也给我一种非常轻快的感觉，倒不是因为画面主体的海浪，而是它前侧用或大或小的色块柔和铺排开的、礁石上附着的细浪。</p>
<p></p>
<p><em>Paul Morphy, the Chess Champion</em>, 1859, Winslow Homer, Print, wood engraving</p>
<p>Credit line: The Museum of Fine Arts, Houston, The Mavis P. and Mary Wilson Kelsey Collection of Winslow Homer Graphics</p>
<p>Source: <a href="https://artsandculture.google.com/asset/paul-morphy-the-chess-champion-winslow-homer/6AE0gmpNUzDrzA" target="_blank" rel="noopener noreffer">Google Arts &amp; Culture</a></p>
<p>温斯洛·霍默（Winslow Homer, 1836-1910）出生于波士顿，童年在剑桥长大，父母皆为新英格兰移民。父亲是典型的商人，而母亲有着画水彩的天赋异禀，顺理成章地成为霍默的“第一任老师”。19 岁高中毕业，父亲安排他去做广告平板印刷。就这样重复进行日常工作近两年后，他开始为一些杂志刊物制作插画，在当时那个年代也意味着就是木版画。霍默的线条感和对黑白分明的把握很好，不几笔就能把最鲜明的特点勾勒出来，如上图。</p>
<p></p>
<p><em>Mounted Bugler</em>,1862, Winslow Homer, Graphite, brush and gray wash on off-white paper</p>
<p>Credit line: Gift of Charles Savage Homer, Jr.</p>
<p>Source: <a href="https://artsandculture.google.com/asset/mounted-bugler-winslow-homer-american-1836%E2%80%931910/FgF0ghbzo-z6dw" target="_blank" rel="noopener noreffer">Google Arts &amp; Culture</a></p>
<p></p>
<p><em>Home, Sweet Home</em>, 1863, Winslow Homer, Painting, oil on canvas</p>
<p>Copyright: Patrons' Permanent Fund</p>
<p>Source: <a href="https://artsandculture.google.com/asset/home-sweet-home/RwErgtlB6qAFTg" target="_blank" rel="noopener noreffer">Google Arts &amp; Culture</a></p>
<p>直到 1863 年他才正式进入国家设计学院（现国家学院博物馆和学校，National Academy Museum and School）学习绘画基础。美国内战期间，他被长期供图的一家报社送去前线，留下了许多战地场景与人物的插画手稿，除战争中的将士名人肖像，也有纷乱中的妇女儿童和留下的残迹。这一段时期以及之后的五到十年，也是霍默从单纯的插画师拓展成画家的时期，我们可以看见其绘画的个人风格已经渐趋成熟，例如选材的角度比起激烈、冲突的场景而言，更常描绘日常与闲暇，主题和所传达的态度也更为暧昧和难以捉摸。画面用色和明暗的对比十分优雅，线条的运用也更加果敢，构图更加简练。</p>
<p></p>
<p><em>Croquet Scene</em>, 1866, Winslow Homer, Painting, oil on canvas</p>
<p>Credit Line: The Art Institute of Chicago, Friends of American Art Collection; Goodman Fund, 1942.35</p>
<p>Source: <a href="https://artsandculture.google.com/asset/croquet-scene-winslow-homer-american-1836%E2%80%931910/xgGjRZZn3Qn5nA" target="_blank" rel="noopener noreffer">Google Arts &amp; Culture</a></p>
<p></p>
<p><em>Art-Students and Copyists in the Louvre Gallery, Paris</em>, 1868, Winslow Homer, Print, wood engraving on wove paper</p>
<p>Object Credit Line: Davison Art Center, Wesleyan University. Purchase funds, 1958</p>
<p>Image Credit Line: <a href="http://www.wesleyan.edu/dac/openaccess" target="_blank" rel="noopener noreffer">Open Access Image from the Davison Art Center, Wesleyan University (http://www.wesleyan.edu/dac/openaccess)</a></p>
<p>Source: <a href="https://artsandculture.google.com/asset/art-students-and-copyists-in-the-louvre-gallery-paris-winslow-homer/qwFCQK-sxPsOGQ" target="_blank" rel="noopener noreffer">Google Arts &amp; Culture</a></p>
<p></p>
<p><em>Study for Eagle Head, Manchester, Massachusetts</em>, 1869, Winslow Homer, Painting, oil on wood</p>
<p>Source: <a href="http://www.metmuseum.org/art/collection/search/11142" target="_blank" rel="noopener noreffer">The Metropolitan Museum of Art</a></p>
<p></p>
<p><em>Eagle Head, Manchester, Massachusetts (High Tide)</em>, 1870, Winslow Homer, Painting, oil on canvas</p>
<p>Source: <a href="https://www.metmuseum.org/art/collection/search/11117" target="_blank" rel="noopener noreffer">The Metropolitan Museum of Art</a></p>
<p>1867-1868 年他在巴黎短住一年，这段期间他仍继续为报社供图，主题转向描述巴黎人的生活，同时作风景绘画的练习。此时亦正值印象派兴起之初，他也展示出如何更好用绘画表现自然光影的探讨，在用笔上也更加放松。但是否能够确证其受到如马奈、莫内等印象派画家的影响，我们无从得知。他的绘画风格，大角度来说是站在写实的基础上去展示光线。</p>
<p>在上两幅画作的比较中，我们可以发现霍默对阳光和天气的捕捉，这反映在浅滩处蓝色与绿色海浪和远处海面的对比，以及三个人物身上向阳处背阳处的色彩。高度饱和、反差明显、边缘轮廓准确充实，这样的用色和线条风格从一至终，也是最吸引我的地方。中部正在拧水的女子在强日光的照射下，衣服变湿的重量感也有一定体现。</p>
<p>我们还可以从 <em>Eagle Head, Manchester, Massachusetts (High Tide), 1870</em> 创作的时代背景中窥见霍默关注的主题。正在快步工业化的美国，到海滩游泳、晒太阳是当时工人们的新潮休闲。三位女子身着如此厚重的衣物下水走了一遭，前两位亦未注意社会所定义的「仪态」，掀开长裙、露出小腿，当时即有评论称「exceedingly red-legged and ungainly」。但我们在绘画中难道不能呈现这样的人物吗？她们是如此的鲜活。</p>
<p>大都会博物馆的播客中，<a href="https://itunesu.itunes.apple.com/feed/id430943000" target="_blank" rel="noopener noreffer">有一期</a>（Author Elizabeth Strout Discusses Two Paintings by Winslow Homer）邀请到了普利策小说奖得主伊丽莎白·斯特劳特（Elizabeth Strout, 1956-）分享她在这幅画中所想象出的故事。</p>
<p></p>
<p><em>The Country School</em>, 1871, Winslow Homer, Painting, oil on canvas</p>
<p>Source: <a href="https://commons.wikimedia.org/wiki/File:Winslow_Homer_-_The_Country_School.jpg" target="_blank" rel="noopener noreffer">Wikimedia Commons</a></p>
<p>1870 年代，霍默致力于描绘田园农村的质朴生活，例如小孩子的童趣嬉闹、年轻人的热恋和大人们的劳作。可不去关注工业化又到什么阶段了，逆行。我们可以在上副画作中捕捉许多细节，例如学生神色中的专注、讲台上的鲜花、挂在黑板边上的帽子、窗布的轻盈和透过窗栅的光影。中部偏左翘起腿的、讲台右侧合看一本书的、画面右部正哭泣着的小男孩和望着他的小女孩，实在是形形色色。</p>
<p>1875 年后他不再作商业插画，希望能凭绘制油画和水彩维持生计。他最有名的作品 <em>Breezing Up (A Fair Wind), 1873-1876</em> 亦在这期间绘成。</p>
<p></p>
<p><em>Breezing Up (A Fair Wind)</em>, 1873-1876, Winslow Homer, Painting, oil on canvas</p>
<p>Source: <a href="https://commons.wikimedia.org/wiki/File:Winslow_Homer,_Breezing_Up_%28A_Fair_Wind%29,_1873-1876,_NGA_30228.jpg" target="_blank" rel="noopener noreffer">Wikimedia Commons</a></p>
<p>当时的评论对这幅画赞赏有加，多为与霍默之前的画作相比认为要出色。但我初见这幅画作时并不懂它为何得以成为「最有名」。是船与船帆的动态感吗？是船与浪之间精妙的推移和被搅乱的倒影吗？是它各方面都很平衡恰当？想来，或是因为其被解读的意义要大于其本身吗？乘风破浪的 19 世纪美国人。在艺术上，他们应该怎么在大杂烩中「孕育本土」、在本土中「重建本土」？</p>
<blockquote>
<p>Even the critic from the <em>Art Journal</em>, who thought the picture typical of Homer&rsquo;s &ldquo;hasty mode of treatment,&rdquo; found it winning nevertheless: &ldquo;It may be accepted as the most spirited of his works; the waves roll, the boat flies swiftly before the wind, and the group of happy boys are felicitous in every pose.&rdquo; Two others concurred: &ldquo;It is painted in his customary coarse and negligé style, but suggests with unmistakable force the life and motion of a breezy summer day off the coast&hellip;.There is no truer or heatier work in the present exhibition.&rdquo;</p>
<p><em><a href="https://www.nga.gov/content/dam/ngaweb/research/publications/pdfs/american-paintings-19th-century-part-1.pdf" target="_blank" rel="noopener noreffer">American Paintings of the Nineteenth Century, Part I</a></em>, pages 312-318, National Gallery of Art, In-gallery publication, free to download online</p>
</blockquote>
<p></p>
<p><em>Blackboard</em>, 1877, Winslow Homer, Painting, watercolor on wove paper</p>
<p>Source: <a href="https://www.nga.gov/collection/art-object-page.71552.html" target="_blank" rel="noopener noreffer">National Gallery of Art</a></p>
<p></p>
<p><em>Schooner at Sunset</em>, 1880, Winslow Homer, Painting, watercolor on wove paper</p>
<p>Source: <a href="https://hvrd.art/o/299942" target="_blank" rel="noopener noreffer">Harvard Art Museum</a></p>
<p>1873 年夏之后他开始将水彩作为常用工具，笔触有的放矢，画面易读。有关注细节的如 <em>Blackboard, 1877</em>，衣着上的格子花纹、布面的褶皱、后背的绑带以及教师并不愉悦的神情。有非常印象派的如 <em>Schooner at Sunset, 1880</em>，落日与即将入夜的天空互相切开，水面上的波光与涟漪处理得精致。</p>
<p></p>
<p><em>Two Figures by the Sea</em>, 1882, Winslow Homer, Painting, oil on canvas</p>
<p>Source: <a href="https://artsandculture.google.com/asset/two-figures-by-the-sea-winslow-homer/IQGb5h7OYzTtrw" target="_blank" rel="noopener noreffer">Google Arts &amp; Culture</a></p>
<p>1881-1882 年，霍默在英格兰东北部的一个海边小镇度过。他更多关注劳动人民个体身上的英雄主义。抛开过于宏大的集体叙事后，反而打开了更加广阔的天地。其画作变得更加沉静，思考也更加深邃。这样的风格一直延续到之后。过去常作为题材的衣着时尚女子，如今更多转向塑造无私无畏的妇女。1883 年他搬到缅因州海边，整个 1880 年代中期都把精力放在海边景象与人物的创作上，除油画和水彩，他还尝试制作蚀刻版画。（更多关于他的蚀刻版画信息<a href="http://oldprintshop.com/artists/3931" target="_blank" rel="noopener noreffer">可见此</a>）</p>
<p></p>
<p><em>Undertow</em>, 1886, Winslow Homer, Painting, oil on canvas</p>
<p>Source: <a href="https://www.clarkart.edu/artpiece/detail/undertow" target="_blank" rel="noopener noreffer">The Clark Art Institute</a></p>
<p>这幅画戏剧性很足，在人物动作中格外显著，肌肉线条和人物比例上俨然是古希腊雕塑的架势。这样夸张的手法，无法让人忽略身体中蕴含的力量。水光与迸溅处的浪花刻画已臻于完美，占画面三分之二的海浪背景也形成了一定的压抑感，以突出海的力量意志。</p>
<p>一连串的海边主题绘画，评论家们称其为「带着画笔的隐士（a hermit with a brush）」，但商业上不为大众所服，画作售价未达预期。</p>
<p></p>
<p><em>A Garden in Nassau</em>, 1885, Winslow Homes, Painting, watercolor on wove paper</p>
<p>1884-1885 年的冬季，霍默在佛州、古巴和巴哈马群岛度过。受世纪杂志（Century Magazine）所托，完成了一系列的具有热带风情的水彩画。色彩更为明亮，所体现的情感也更显欢快。和他早年的作品相比，色彩在冷暖上更加分明，而不是一味的偏向于符合日光的暖，表达场景上也就有了更多语言。有人比喻道，他的这次旅程如同高更去往塔希提岛那般，给自己带来陌生与新奇。而在阿第伦达克山脉附近村庄的夏日之旅，也给他的绘画增添不少豁达与奔放。经此几行，他更像是找到了在冷静与轻快转换的滚轮开关。</p>
<p></p>
<p><em>Fox Hunt</em>, 1893, Winslow Homer, Painting, oil on canvas</p>
<p>Source: <a href="https://www.pafa.org/museum/collection/item/fox-hunt" target="_blank" rel="noopener noreffer">Pennsylvania Academy of the Fine Arts</a></p>
<p>1890 年后霍默创作了许多与自然中「捕猎」相关的作品，除人类的捕猎外，也包含着动物间的捕猎。正值达尔文进化论阐发、兴盛，时人称其画作表达的便是「物竞天择」。上幅画作中即一场老鹰对狐狸的捕猎，刚上架就被宾夕法尼亚美术学院买下，这也是他的画作首次藏录于主要博物馆。情节性解读这里姑且略去。值得注意的还有他所选择的视角和构图。起初我以为是选取了一个像是几乎卧倒在远处拿长焦推前去拍摄的视角，但我们能够看见老鹰的背部，说明其实是俯视。这在西方绘画里并不常见，更像是他对日本浮世绘的借鉴。1900 年后他的经济来源渐趋稳定。</p>
<p>霍默的晚年依然热衷于创作海景画，毕竟，他可是这个领域的能者。能者多劳。</p>
<p></p>
<p><em>The Bather</em>, 1899, Winslow Homer, 1899, Painting, watercolor on wove paper</p>
<p>Source: <a href="https://www.metmuseum.org/art/collection/search/11109" target="_blank" rel="noopener noreffer">The Metropolitan Museum</a></p>
<p>好的作品为什么能给人以震慑力？为什么能被人口耳相传、收藏至今？大都离不开对那些纯粹的、美好的事物进行追问。这种追问可以是现实主义的无限观察，可以是现代主义的打破重构，它可以是无数的一切，但它一定基于非常高的人文起点。平白展示也好，挖掘黑暗也罢，当创作想要去往「能使更多人都接受和同意」的路径时，就要自己权衡好该怎么去体现「美中不足」，就要在情趣和意味上，探讨如何才能做到先进而不造成疏离感。在这中间地带如鱼得水的霍默，无疑是成功的。</p>
<p></p>
<p><em>Taking on Wet Provisions (Schooner Marked Newport, K. W.)</em>, 1903, Winslow Homer, Painting, watercolor on wove paper</p>
<p>Source: <a href="https://www.metmuseum.org/art/collection/search/11143" target="_blank" rel="noopener noreffer">The Metropolitan Museum</a></p>
<p></p>
<p><em>Rocky Shore, Bermuda</em>, 1900, Winslow Homer, Painting, watercolor on wove paper</p>
<p>Source: <a href="https://collections.mfa.org/objects/5016" target="_blank" rel="noopener noreffer">Museum of Fine Arts Boston</a></p>
]]></description>
</item></channel>
</rss>
