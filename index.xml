<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Rongbin&#39;s Blog</title>
        <link>https://fanrongbin.com/</link>
        <description>一个博客。</description>
        <generator>Hugo -- gohugo.io</generator><managingEditor>fanrongbin0201@gmail.com (Rongbin Fan)</managingEditor>
            <webMaster>fanrongbin0201@gmail.com (Rongbin Fan)</webMaster><lastBuildDate>Mon, 13 Mar 2023 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://fanrongbin.com/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Hybrid Bullet Points/SaaS (Software-as-a-Service)</title>
    <link>https://fanrongbin.com/hybrid-saas/</link>
    <pubDate>Mon, 13 Mar 2023 00:00:00 &#43;0000</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/hybrid-saas/</guid><description><![CDATA[<h2 id="怎么判定saas">怎么判定SaaS</h2>
<ul>
<li>产品/服务
<ul>
<li>开箱即用的应用程序</li>
<li>云部署，技术栈重 web</li>
</ul>
</li>
<li>商业模式
<ul>
<li>（增量）订阅制，而非一次性买断</li>
<li>持续提供客服</li>
</ul>
</li>
<li>公司角度
<ul>
<li>企业整体毛利率不低于 50%
<ul>
<li>传统软件（包括大型定制），毛利一般在 30%-40%</li>
</ul>
</li>
<li>少交付，多产品
<ul>
<li>具体关注交付团队的规模、与客户签订的合同</li>
<li>进一步考虑人工工时的成分，产品是否足够标准化</li>
</ul>
</li>
</ul>
</li>
<li>关注是否存在行业特性（垂类 SaaS）
<ul>
<li>重私有化部署无可厚非，对数据安全非常看重的：医疗、金融、政府</li>
</ul>
</li>
<li>关注客户规模与实际发生业务
<ul>
<li>偏向中小企业，但仍以私有化居多，也许只能叫“软件开发公司”</li>
<li>打包卖解决方案居多，也许只能叫“业务咨询公司”</li>
</ul>
</li>
</ul>
<h2 id="saas商业化">SaaS商业化</h2>
<blockquote>
<p>The thing that surprises many investors and boards of directors about the SaaS model is that, even with perfect execution, an acceleration of growth will often be accompanied by a squeeze on profitability and cash flow.</p>
<p>Ron Gill</p>
</blockquote>
<ul>
<li>SaaS商业化的本质：标准化软件与规模增长
<ul>
<li>软件生意的本质：越来越低的边际成本，以体现高毛利</li>
<li>标准化产品带来的标准化定价：对 volume 的要求</li>
<li>是否符合逻辑且可持续：复购/留存是生命线，订阅制的具体设计、产品自身功能的厚度</li>
</ul>
</li>
<li>成本的大头：对营销和渠道商的依赖</li>
<li>垂类SaaS与行业强相关
<ul>
<li>关注行业自身周期性</li>
<li>关注行业自身数字化程度和数字化转型需求</li>
</ul>
</li>
<li>估值：亏损，但未来有正现金流，多用 PS
<ul>
<li>多高估：考虑企业数字化转型作为不可逆趋势、对传统软件行业的蚕食</li>
<li>视需求对其具体营收作切分：SaaS、license、定制化等</li>
</ul>
</li>
<li>在中国的现状和趋势
<ul>
<li>传统企业和传统行业使用情况依然一般：整体 10% 的渗透率（成熟赛道 40%-60%）</li>
<li>垂类细分市场日趋饱和
<ul>
<li>是否能切入公司利益</li>
<li>是否能切入终端使用者的需求痛点</li>
<li>新机会更多位于赛道的交际处：切口更小，创造新需求</li>
</ul>
</li>
<li>时机很重要
<ul>
<li>能否迅速抢占市场+用户养成习惯</li>
<li>是否需要等待供应链/价值链效应</li>
<li>是否是一项长期交易：愿不愿意赌、愿不愿意放弃既有成果</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="重点指标">重点指标</h2>
<ul>
<li>LTV/CAC</li>
<li>ARR, MRR, ARR/ACV</li>
<li>Retention (Rate), DRR, NDR</li>
<li>Churn (Rate), Customer Churn, Dollar Churn</li>
</ul>
]]></description>
</item><item>
    <title>Hybrid Bullet Points/小红书</title>
    <link>https://fanrongbin.com/hybrid-xiaohongshu/</link>
    <pubDate>Sat, 11 Mar 2023 00:00:00 &#43;0000</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/hybrid-xiaohongshu/</guid><description><![CDATA[<h2 id="产品关键词">产品关键词</h2>
<h3 id="真实">真实</h3>
<blockquote>
<p>小红书 COO 柯南：「但其实我们不是虚拟世界，我们只是把人线下的生活，在线上呈现，但它依然是真实的。小红书社区里面发生的一切，其实反映的就是线下的真实场景。」</p>
<p><a href="https://open.163.com/newview/movie/free?pid=SGT5IOBKC" target="_blank" rel="noopener noreffer">《小红书 COO 对谈学者刘擎》</a></p>
</blockquote>
<ul>
<li>分享者/用户<strong>真实存活</strong>：UGC，内容由活人用户生产</li>
<li>分享行为<strong>动机真实</strong>：分享欲、兴趣爱好、逐利、包装与炒作</li>
<li>分享<strong>内容的真与实</strong>（authenticity）：可靠程度</li>
<li>算法推荐标签真实：生活化内容与人群分类</li>
</ul>
<h3 id="工具性">工具性</h3>
<ul>
<li><strong>双列图文流</strong>：比 Instagram 具体，比抖音高效，用户仍然有一定掌控权（点击后阅读）</li>
<li><strong>目的性使用搜索功能</strong>：更短的链路、对搜索引擎的替代、相对的一种「反抗」</li>
<li><strong>持续正反馈</strong>：重内容；重用户体验/运营/生态维护（体量最大的是粉丝 500 以下的长尾博主）</li>
</ul>
<h3 id="中文网络世界">中文网络世界</h3>
<ul>
<li><strong>部分回应了中文网络世界的问题</strong>：缺乏即时性、缺乏透明度、缺乏可读性（加工解密）、信息多围绕「人」的特质性和复杂变化，以及聚合处的缺乏。但小红书不是 IM（微信），不太像是媒体（微博），不完全是搜索引擎（百度），用户也懂得在监管的灰色地带跳舞。</li>
<li><strong>类似文化背景人群的解决方案提供、情感联结索求</strong>：华人，中文使用者</li>
</ul>
<h3 id="美面子消费主义与精英主义">美、面子、消费主义与精英主义</h3>
<ul>
<li><strong>美的内容</strong>：自形成社区壁垒（对于用户也对于竞品）
<ul>
<li>最大用户群决定社区氛围：人人都是姐妹</li>
<li>任一垂类都有优质内容：产品本身极具潜力，但仍需关注公司战略</li>
</ul>
</li>
<li><strong>账号就像面子</strong>：附加算法刻意营造熟人网络</li>
<li><strong>消费主义与精英主义</strong></li>
</ul>
<h2 id="商业化与竞争">商业化与竞争</h2>
<ul>
<li>
<p>营收 80% 来自广告：广告资源、抽佣</p>
<ul>
<li>素人便宜，低成本容易实现高声量</li>
<li>用户本身天然对广告容忍度高（种草社区调性），但 Adload 已近天花板：约 10%-12%</li>
<li>抽佣始终难做到切入与厂商/用户共同成长的增量</li>
</ul>
</li>
<li>
<p>营收 20% 来自电商：不好做却还得做（Instagram 没跑通、大众点评跑通了的路径，关注差异），核心是不断把蛋糕切进平台里</p>
<ul>
<li>已试图纳入下单支付环节（专业号、店铺，号店一体）</li>
<li>但问题依然是社区原子化、小而美，重品牌（branding）（持续对比点评、抖音电商）</li>
<li>依然需要更具纯粹的电商思维
<ul>
<li>自营方面是否考虑仓储物流和数据复用、预测（类唯品会、天猫国际）</li>
<li>图文继续考虑内容付费抽佣/抽成（干货、课程、训练营，类知乎）</li>
</ul>
</li>
</ul>
</li>
<li>
<p>小红书蒲公英</p>
<ul>
<li>数据复用也有一定新尝试，但维度或许放得不开而过于集中营销本身，切实贴近商家生产环节的宏观数据不多</li>
</ul>
</li>
<li>
<p>关注字节 Lemon8 的动向</p>
<ul>
<li>完全复制小红书，从界面到逻辑</li>
<li>背靠字节的优秀本地化、地推、TikTok 联动</li>
</ul>
</li>
</ul>
<hr>
<p>Hybrid Bullet Points 以要点形式呈现与科技和商业有关的内容。</p>
]]></description>
</item><item>
    <title>Hybrid #4</title>
    <link>https://fanrongbin.com/hybrid-4/</link>
    <pubDate>Thu, 16 Feb 2023 00:00:00 &#43;0800</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/hybrid-4/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.fanrongbin.com/hybrid-4.webp" referrerpolicy="no-referrer">
            </div><p><figure><a class="lightgallery" href="https://img.fanrongbin.com/Zine5.webp" title="SUMMER DAYS / Moritz Schorpp - DECALOGUE Magazine" data-thumbnail="https://img.fanrongbin.com/Zine5.webp" data-sub-html="<h2>SUMMER DAYS / Moritz Schorpp - DECALOGUE Magazine</h2><p>SUMMER DAYS / Moritz Schorpp - DECALOGUE Magazine</p>">
        
    </a><figcaption class="image-caption">SUMMER DAYS / Moritz Schorpp - DECALOGUE Magazine</figcaption>
    </figure></p>
<div style="align:middle;">
<iframe allow="autoplay *; encrypted-media *; fullscreen *; clipboard-write" frameborder="0" height="175" style="width:100%;max-width:100% !important;overflow:hidden;background:transparent;" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation" src="https://embed.music.apple.com/cn/album/raven/1652665077?i=1652665088&l=en"></iframe>
</div>
<h2 id="摘录">摘录</h2>
<blockquote>
<p>It took me a long time to figure out why founders don&rsquo;t listen. At first I thought it was mere stubbornness. That&rsquo;s part of the reason, but another and probably more important reason is that so much about startups is <a href="http://www.paulgraham.com/before.html" target="_blank" rel="noopener noreffer">counterintuitive</a>. And when you tell someone something counterintuitive, what it sounds to them is wrong. So the reason founders don&rsquo;t listen to us is that they don&rsquo;t <em>believe</em> us. At least not till experience teaches them otherwise.</p>
</blockquote>
<p><a href="http://www.paulgraham.com/users.html" target="_blank" rel="noopener noreffer">What I&rsquo;ve Learned from Users -  Paul Graham</a></p>
<blockquote>
<p>My shortest short stories are like little dreams I’m having—I forgive myself for not totally knowing the place, not totally knowing the people, and not even totally knowing their exact problems or the exact problem of the place. Did I convey the feeling I wanted? Great. We out.</p>
</blockquote>
<p><a href="https://thecreativeindependent.com/people/writer-bud-smith-on-putting-in-the-work/" target="_blank" rel="noopener noreffer">Writer Bud Smith on putting in the work – The Creative Independent</a></p>
<blockquote>
<p>It got me thinking that way as well. I was always obsessed with the Saturn return idea—the age between 27 and 32, where basically you enter a certain kind of space of criticality where life can be super challenging, but it allows you to figure out who your true self is. I also have a lot of references to home in my own work, so one thing that was really interesting about collaborating in that way was that in a way we both had similar issues. There are formulas that think about the geometry of space and light and textures and the way that they align with our own personal metaphors, our own personal mythologies. And she was centering her frame line, her obsession with the black rodeo culture in the South. We’re both from the South, but I feel like she had more experience with that than I did.</p>
</blockquote>
<p><a href="https://thecreativeindependent.com/people/artist-jacolby-satterwhite-on-trusting-your-own-process/" target="_blank" rel="noopener noreffer">Artist Jacolby Satterwhite on trusting your own process – The Creative Independent</a></p>
<blockquote>
<p>When I let myself be permeated by this thought – that I might be stuck with certain inner disturbances forever – I definitely feel a bit of peevishness in response: &ldquo;Wait, I&rsquo;m never going to get to the problem-free phase? That&rsquo;s not what I signed up for!&rdquo; But then comes the sense of a heavy burden having been lifted. The pressure&rsquo;s off. I get to unclench, relax, and fall back into the life I&rsquo;m living. Far from this being dispiriting, I find myself much more motivated to get stuck in. It turns out my really big problem was thinking I might one day get rid of all my problems, when the truth is that there&rsquo;s no escaping the mucky, malodorous compost-heap of this reality. Which is OK, actually. Compost is the stuff that helps things grow.</p>
</blockquote>
<p><a href="https://www.oliverburkeman.com/never" target="_blank" rel="noopener noreffer">What if you never sort your life out? | Oliver Burkeman</a></p>
<blockquote>
<p>在台灣教育長大的學生常常會覺得追求頂尖是天才才要考慮的事情，但其實我覺得頂尖和平庸往往是一種自我實現的預言。覺得自己平庸的人一直在做很普通的事情，最終自然會趨於平庸；追求頂尖的人則會因為一直在做困難的事而不斷接近頂尖。</p>
</blockquote>
<blockquote>
<p>最後補充一下，我並不是在說頂尖人才都沒學歷，也不是在說沒學歷代表你更有機會成為頂尖人才。我想表達的是：對於追求頂尖的人來說，要不要拿那個學歷大多數時候是個性問題，而不是能力問題。有些人就是極度厭惡浪費時間在沒意義的事情上，特別是當你有更困難、更有趣的事情想做的時候。</p>
</blockquote>
<p><a href="https://sheracaolity.ghost.io/degree/" target="_blank" rel="noopener noreffer">論學歷 - Sheracaolity</a></p>
<blockquote>
<p>我犹豫入群的原因就是如此，从一个沉默的群，加到一个新群，新群刚开始热闹一阵后很快就陷入了沉默。毕竟毕业将近 20年了，还能保持联系的同学寥寥无几，我们能聊的话题，翻来覆去还是关于高中时期短暂的交集。
⋯⋯
为了弥合人与人之间的距离，为了找到失去的附近性，我们应该减少屏幕时间，多出去走走。去和那些生气腾腾的人交谈，去跟久未谋面的朋友联系，重新找回丢掉的中圈友谊。</p>
</blockquote>
<p><a href="https://rigeng100.com/post/dayone/ooawr5yscr46c7hnvt4jhsqex2tg/2022-02-13" target="_blank" rel="noopener noreffer">找回丢掉的中圈友谊 - 日更100</a></p>
<blockquote>
<p>过去和现在的原因都一样：太懒——以前嫌麻烦，后来有一段时间觉得找起来真方便于是就满足了；太傲慢——以为在技术加持下可以一年完成原本需要十年的浸润；太庸俗——分不清获取信息与学习。</p>
</blockquote>
<p><a href="https://blog.yitianshijie.net/2022/07/13/why-cant-we-find-good-information-now/" target="_blank" rel="noopener noreffer">为什么现在找不到好信息 - 一天世界</a></p>
<blockquote>
<p>But today, it seems that the term web2 is being perpetuated as a strawman to encompass all the follies of human nature and civilisation with some vague underpinning of centralised finance and some blockchain integrations in the fold. A marketing and PR effort to rewrite history and to redefine the internet and the WWW with an arbitrary hard line—before and after blockchain. The implication is that everything in this world, software or otherwise, that isn’t somehow connected to a distributed cryptographic ledger, is web2, and that it is bad.</p>
</blockquote>
<p><a href="https://nadh.in/blog/web2-web3/" target="_blank" rel="noopener noreffer">But, aren&rsquo;t you folks web2? - nadh.in</a></p>
<blockquote>
<p>这似乎又开始了让人熟悉的老剧情。场景的吸引力，模式的吸引力，大过一切，对入局的紧张大过一切，喊出做中国OpenAI的口号大过一切，小圈子的互相鼓掌也大过了一切，包括对OpenAI究竟怎么成了今天的样子的讨论。</p>
<p>在这些热闹的朋友圈之外，关于OpenAI的各种研究也都在那里放着：</p>
<p>OpenAI起始于一群在通用人工智能备受怀疑时仍然相信它能成的人，而非起始于着急“做另一个DeepMind”；它在屡屡碰钉子后设计了针对性极强的新的投资回报协议，而非单纯的有钱就上；它有一个提供着源源不断算力并可以从中获利的互联网巨头的支持，甚至亲身证明了没有这种支持只靠有钱有闲的大佬是做不成这个事的；甚至，它已经在暴露出只被一小群人来掌控一个通用大模型、一个所谓未来的互联网基础的问题所在。</p>
<p>而这些可能才是后发者更应该提前考虑的问题。</p>
<p>有些果实很高，有些果实已经落到低处。王慧文想上船，可能需要先从朋友圈出来。</p>
</blockquote>
<p><a href="https://www.pingwest.com/a/277269" target="_blank" rel="noopener noreffer">着急要上ChatGPT这艘船的王慧文，被他的朋友们当成了船票 - 品玩</a></p>
<blockquote>
<p>I used to blame advertisers for that restlessness and dissatisfaction, but I don’t think that’s right. We were already restless; we always have been. The advertisers just figured out how to nurture, tend, exacerbate, and capitalize on the pre-existing condition, that innate restlessness, promising that something new is going to set all to rights. When the flashing sidebar connects that hand lotion, those hiking boots, a beach vacation, or some rugged SUV with satisfaction, joy, and inner peace, it sure feels like we’d be suckers not to buy it. And when that thing inevitably disappoints, we hardly even notice. There’s always something new to buy. That narrative of elusive satisfaction isn’t just something we’re repeatedly being told; it is a story we’re literally buying into all the time. No surprise, then, that when our beloved to whom we once upon a time “pledged our troth” inevitably disappoints, we start thinking it might be time to get a new beloved.</p>
</blockquote>
<p><a href="https://comment.org/repair-and-remain/" target="_blank" rel="noopener noreffer">Repair and Remain - Comment Magazine</a></p>
<blockquote>
<p>And like the small towns of Sinclair Lewis’ day, these vertical communities have the ability to use social ostracism to punish those who deviate from consensus norms and political objectives.</p>
</blockquote>
<blockquote>
<p>We now live in a world where our communities exist in three dimensions — the familiar hodgepodge of local humanity in two dimensions, and our self-sorted online spaces in a third.</p>
</blockquote>
<blockquote>
<p>So for now and for the foreseeable future, our public goods are provided locally, but our social interaction happens in the cloud. In theory, this could be a dangerous recipe.</p>
</blockquote>
<blockquote>
<p>So I’m worried about the future of our public goods. I’m worried that the online space will fragment and degrade horizontal communities, but will never manage to fully replace them either. We need to find some way to get along with the human beings who live within physical proximity to us, even as we continue to spend much of our time online. Vertical communities must make their peace with horizontal communities…somehow.</p>
</blockquote>
<p><a href="https://noahpinion.substack.com/p/vertical-communities" target="_blank" rel="noopener noreffer">Vertical communities - by Noah Smith - Noahpinion</a></p>
<h2 id="其他">其他</h2>
<ul>
<li><a href="https://readwise.io/" target="_blank" rel="noopener noreffer">Readwise</a> and <a href="https://readwise.io/read" target="_blank" rel="noopener noreffer">Reader</a></li>
<li><a href="https://www.snipd.com/" target="_blank" rel="noopener noreffer">Snipd - Unlock the Knowledge in Podcasts</a></li>
<li><a href="https://superwall.com/" target="_blank" rel="noopener noreffer">Superwall — Build the best mobile paywalls</a></li>
<li><a href="https://incoggo.com/" target="_blank" rel="noopener noreffer">Incoggo</a>
<ul>
<li><a href="https://incoggo.com/privacy/" target="_blank" rel="noopener noreffer">Privacy Policy - Incoggo</a></li>
<li><a href="https://news.ycombinator.com/item?id=29464674" target="_blank" rel="noopener noreffer">Show HN: Incoggo – Free Adblocker for Paywalls | Hacker News</a></li>
</ul>
</li>
</ul>
]]></description>
</item><item>
    <title>2022 年终：生活的日子里，化身躺倒在沥青路上的一滩果酱</title>
    <link>https://fanrongbin.com/jam-on-road/</link>
    <pubDate>Sat, 31 Dec 2022 01:00:00 &#43;0800</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/jam-on-road/</guid><description><![CDATA[<p>这一年我新得到，也复习了许多的「告诫」，它们来自每一天、每个生活的日子。好像是四年前一个夏天下午，彭美问我们为什么总是急匆匆地，赶着下课、赶着体锻、赶着回宿舍、赶着回教室。</p>
<p>「因为要生活啊。」</p>
<p>那时比现在要懂得什么叫生活：一边洗衣服一边哼歌，一边吃饭一边跟朋友闲聊，或者在教室小阳台写日记，在自习的间隙看会儿闲书。生活特别简单。</p>
<p>简单的生活一下子摔得支离破碎，现在妄想一下子拾掇好——「告别 2022，告别疫情吧！」，给这场生活送第二次终，多希望这盛大的追悼会开得圆满，实际上连该埋葬的是什么都不知道。</p>
<p>善良的人们，每一天、每个生活的日子里，化身躺倒在沥青路上的一滩果酱，又甜，又脏：生活在离开了「生活」时才诞生。许多的蚂蚁背着这许多的告诫，像倒芝麻一样从化身中涌出。</p>
<p>于是果酱又变成了扛着告诫的蚂蚁，躲闪着一双双黑色的皮鞋，不留神，告诫就会又被落下。</p>
<p>好在这之中至少尝过了甜滋味，那忘了要抓住的一切渺小的东西，至少抓住过一些。被踩死之前靠着这念想，靠着舔吮善良的人们留下的果酱、扛着的告诫——</p>
<p>和善良的人们站在一起，把拥有生活的洁白祝愿，也留给善良的人们。</p>
<p>今年听到最喜欢的新专辑有：FELIVAND《Ties》、The Comet Is Coming《Hyper-Dimensional Expansion Beam》、Sabrina Claudio《Based On A Feeling》、Steve Lacy《Gemini Rights》、Brian Eno《FOREVERANDEVERNOMORE》、Rad Museum《RAD》、Night Swimmer《Xia Ye》、NewJeans《New Jeans》。</p>
<p>今年听播客的频率大幅下降，原因主要有二：通勤时间减少，以及自顾不暇，听不得太多说教。</p>
<p class="right-date" align="right">2022 年 12 月 31 日</p>
<hr>
<iframe id="embedPlayer" src="https://embed.music.apple.com/us/album/ties/1625027792?app=music&amp;itsct=music_box_player&amp;itscg=30200&amp;ls=1&amp;theme=auto" height="450px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *; clipboard-write" style="width: 100%;  overflow: hidden; border-radius: 10px; transform: translateZ(0px); animation: 2s ease 0s 6 normal none running loading-indicator; background-color: rgb(228, 228, 228);"></iframe>
]]></description>
</item><item>
    <title>Hybrid #3</title>
    <link>https://fanrongbin.com/hybrid-3/</link>
    <pubDate>Sun, 04 Sep 2022 00:00:00 &#43;0800</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/hybrid-3/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.fanrongbin.com/hybrid-3.webp" referrerpolicy="no-referrer">
            </div><p><figure><a class="lightgallery" href="https://img.fanrongbin.com/lunar-pits.webp" title="NASA’s LRO Finds Lunar Pits Harbor Comfortable Temperatures" data-thumbnail="https://img.fanrongbin.com/lunar-pits.webp" data-sub-html="<h2>NASA’s LRO Finds Lunar Pits Harbor Comfortable Temperatures © NASA/GSFC/Arizona State Univeristy</h2><p>NASA’s LRO Finds Lunar Pits Harbor Comfortable Temperatures</p>">
        
    </a><figcaption class="image-caption">NASA’s LRO Finds Lunar Pits Harbor Comfortable Temperatures © NASA/GSFC/Arizona State Univeristy</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="https://img.fanrongbin.com/Elliot_Luncheon_FeliceKnol_3.webp" title="© Felice Knol" data-thumbnail="https://img.fanrongbin.com/Elliot_Luncheon_FeliceKnol_3.webp" data-sub-html="<h2>© Felice Knol</h2><p>© Felice Knol</p>">
        
    </a><figcaption class="image-caption">© Felice Knol</figcaption>
    </figure></p>
<h2 id="摘录">摘录</h2>
<h3 id="on-sharing-the-magic-of-the-creative-process-w-serbest-salih--the-creative-independent">On sharing the magic of the creative process, w/ Serbest Salih,  The Creative Independent</h3>
<blockquote>
<p>They see the world from different levels. It’s a very innocent perspective because it’s without editing—it is a free moment without any pressure. When they see any moment that inspires them, they capture it. Their work is about the celebration of childhood; about seeing the world through the eyes of children, not as adults.
&hellip;
When I teach them photography composition, I don’t tell them what they should do. I tell them that photography doesn’t have rules—that when you shoot, you just have to feel it. I try to make sure not to pressure them. [Even though] it’s analog photography, and it’s a limited [medium], I tell them, “You have just to feel it, you can shoot whatever you want.”</p>
</blockquote>
<p><a href="https://thecreativeindependent.com/people/artist-and-educator-serbest-salih-on-sharing-the-magic-of-the-creative-process/" target="_blank" rel="noopener noreffer">原文 →</a></p>
<p>教学是另一种获取灵感的途径：新手们未受打磨的灵感、眼光、视角，过程中前后对比体会差异和利弊。</p>
<h3 id="quoted-from-a-psalm-for-the-wild-built-by-becky-chambers-how-websites-die-by-wesley">Quoted from <em>A Psalm for the Wild-Built</em> by Becky Chambers, <em>How Websites Die</em> by Wesley</h3>
<blockquote>
<p>&hellip; And I also included this lovely quote from A Psalm for the Wild-Built by Becky Chambers:</p>
<blockquote>
<p>It is difficult for anyone born and raised in human infrastructure to truly internalize the fact that your view of the world is backward. Even if you fully know that you live in a natural world that existed before you and will continue long after, even if you know that the wilderness is the default state of things, and that nature is not something that only happens in carefully curated enclaves between towns, something that pops up in empty spaces if you ignore them for a while, even if you spend your whole life believing yourself to be deeply in touch with the ebb and flow, the cycle, the ecosystem as it actually is, you will still have trouble picturing an untouched world. You will still struggle to understand that human constructs are carved out and overlaid, that these are the places that are the in-between, not the other way around.</p>
</blockquote>
</blockquote>
<p><a href="https://notebook.wesleyac.com/how-websites-die/" target="_blank" rel="noopener noreffer">原文 →</a></p>
<h3 id="interview-vitalik-buterin-creator-of-ethereum-noahpinion">Interview: Vitalik Buterin, creator of Ethereum, Noahpinion</h3>
<blockquote>
<p>I definitely think that in the medium-term future cryptocurrencies will settle down and be only about as volatile as gold or the stock market. The main question is just what level the prices will settle down at.
&hellip;
There&rsquo;s a few pro- proof of work arguments. In my view the strongest argument is the &ldquo;costless simulation&rdquo; issue. Basically, the idea is that in a proof of stake chain, an attacker could reach out to the owners of the coins at some point many years ago, buy up their old keys for a very low price (because those coins have since been moved to addresses controlled by different keys), and use those coins to create a different chain that forks off from that point and, in a vacuum, looks like a valid history. A node that knows only the protocol rules, connecting to the network from scratch, would not be able to tell the difference between the actual chain and this simulated chain provided by an attacker. In PoW, on the other hand, creating such a simulated alternate chain requires redoing an equal amount of proof of work.</p>
</blockquote>
<p><a href="https://noahpinion.substack.com/p/interview-vitalik-buterin-creator" target="_blank" rel="noopener noreffer">原文 →</a></p>
<h3 id="an-interview-with-venture-capitalist-bill-gurley-mba-93">An Interview with Venture Capitalist Bill Gurley, MBA ’93</h3>
<blockquote>
<p>One of the things that’s really important about venture is you have to conceptualize ideas that have lots of running room, and where the incumbents aren’t going to play.</p>
</blockquote>
<p><a href="https://medium.com/texas-mccombs-news/venture-capitalist-bill-gurley-975e59758592" target="_blank" rel="noopener noreffer">原文 →</a></p>
<h3 id="白板报两只眼睛看到的-cmkids-大地艺术">白板报：两只眼睛看到的 CMkids 大地艺术</h3>
<blockquote>
<p>在回家的地铁上，小 Jo 说：</p>
<p>「我明白了，我们应当用两只眼睛看世界。」</p>
<p>「是哪两只眼睛呢？」</p>
<p>我启发式地提问，很期待他说：「一只是眼睛叫科学，一只眼睛叫艺术。」</p>
<p>然而，他回答：「一只是自己的眼睛，一只是朋友的眼睛。」</p>
</blockquote>
<p><a href="http://wangpei.net/2022/07/07/cmkids-arts-on-earth/" target="_blank" rel="noopener noreffer">原文 →</a></p>
<p>人很难想象超出自己认知范围的事物，带来的要求是人与人，或者人与机器之间的交流。</p>
<h3 id="陈先发稀粥颂">陈先发：稀粥颂</h3>
<div class="offline-poem">多年来我每日一顿稀粥。在它的清淡与
<br>
嶙峋之间，在若有若无的餐中低语之间
<p>我埋头坐在桌边。听雨点击打玻璃和桉叶
<br>这只是一个习惯。是的，一个漫无目的的习惯</p>
<p>小时候在稀粥中我们滚铁环
<br>看飞转的陀螺发呆，躲避旷野的闷雷</p>
<p>我们冒雨在荒冈筑起
<br>父亲的坟头，我们继承他的习惯又</p>
<p>重回这餐桌边。像溪水提在桶中
<br>已无当年之怒――是的，我们为这种清淡而发抖</p>
<p>这里面再无秘诀可言了？我听到雨点
<br>击打到桉叶之前，一些东西正起身离去</p>
<p>它映着我碗中的宽袍大袖，和
<br>渐已灰白的双鬓。我的脸。我们的脸</p>
<p>在裂帛中在晚霞下弥漫着的
<br>偏街和小巷。我坐在这里。这清淡远在拒绝之先</p>
<p>（2010 年 7 月）</div></p>
<h2 id="随感">随感</h2>
<ol>
<li>
<p>来自用户自身行为习惯的粘性与日活：人们更多地发 Instagram Story（限时动态），以至于部分的交互被框定在 24 小时内，否则被落下。</p>
</li>
<li>
<p><a href="https://www.gated.com/" target="_blank" rel="noopener noreffer">Gated: Noise-Canceling Headphones for Email</a>，以及 <a href="https://www.theverge.com/2022/8/25/23318759/duckduckgo-email-protection-service-available-everyone-open-beta" target="_blank" rel="noopener noreffer">@duck.com</a>：反思日常，反思理所当然的接受——为什么发信人预设收信人一定要“收到信件”和“看到信件”？</p>
</li>
<li>
<p>无多少差异的底层逻辑，用工文化、专业求职市场买卖方在未来转变的可能</p>
<blockquote>
<p>⋯⋯最後，Legalist 是一個員工數 50 人且全遠距協作的團隊。Shang 表示這讓他們得以獵取到一些不想在傳統對沖基金文化中工作、但本身具備很強專業技能與市場嗅覺的人才。上述這點讓我印象非常深刻。過去人們常提的「破壞」是技術、商業模式上的突破，如今一種新型態的破壞或許是從更根本的地方下手：人才。畢竟，無法吸引人才的公司，都終將被超越。</p>
<p><a href="https://mailchi.mp/manny-li.com/063-15684649" target="_blank" rel="noopener noreffer">曼報 #149</a></p>
</blockquote>
</li>
<li>
<p>从订户身上挖钱，而少见从片商和广告商身上挖钱：<strong>能</strong>撬得动、搅得浑的池子，谁比较深？</p>
</li>
<li>
<p>生态作为一种思维工具：和链条式相比，它更圆，更接近现实世界。不过最重要的是它足够<strong>新</strong>，对这个世界的反应足够快。</p>
<blockquote>
<p>Adner 在本書中替生態系下了一個我認為夠精簡的定義：</p>
<blockquote>
<p><strong>一個生態系就是「合作夥伴」透過「價值結構」相互作用，向「終端客戶」傳遞「價值主張」。</strong></p>
</blockquote>
<p>⋯⋯柯達的失敗不在於它沒有轉型，而是它只在不變的生態系假設下轉型，只關注傳統分析框架下的競爭對手（例如：富士），而忽略合作夥伴才是真正可能帶來破壞的角色。</p>
<p><a href="https://mailchi.mp/manny-li.com/063-15893597" target="_blank" rel="noopener noreffer">曼報 #154</a></p>
</blockquote>
<p>一个好的例子（Alexa），一个滥用或者缺失的例子（微软）。</p>
</li>
<li>
<p>丢掉数字，似乎能让我们更好理解时间。例如一个进度条，一张饼图。</p>
</li>
<li>
<p>书被<strong>神圣化</strong>了，特别是对于小孩来讲，书和其他所有的一切一样，都只是<strong>玩具</strong>。重要的地方很多人说过：从具象的爱中来又从中抽身、朋友式的对话，以及无尽的想象力。（不过这不代表不需要监管和讨论，站在社会教化的角度）不要期待小孩子能被硬灌出什么花样。庄周梦蝶，蝶梦庄周——明天，我们能去一趟公园玩儿吗？</p>
</li>
<li>
<p>其实我们往往并非“<a href="https://via.zhubai.love/posts/2156507432179023872" target="_blank" rel="noopener noreffer">在重大的事情上，很容易做决定，反而在微小的事情上，会思量很久</a>”，而是我们总觉得那些大事“本可以有更好的结果”，由此带来的很多回想，使自己误以为是”没有经过多少的思量“。实际上这些大事在头顶回旋，找准每天的缝隙钻进颅内，成百上千，成千上万次。对意识、潜意识的丈量，好像缺少一套工具，也这么缺少一根筋。</p>
</li>
<li>
<p>催泪文字有一共性，它们由日常和平凡的字眼拼成。</p>
</li>
</ol>
<hr>
<p>Hybrid 是一个内容摘录计划。<a href="https://fanrongbin.com/hybrid-2" target="_blank" rel="noopener noreffer">按此</a>可以查看上一期。</p>
]]></description>
</item><item>
    <title>Hybrid #2</title>
    <link>https://fanrongbin.com/hybrid-2/</link>
    <pubDate>Mon, 02 May 2022 00:00:00 &#43;0800</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/hybrid-2/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.fanrongbin.com/hybrid-2.webp" referrerpolicy="no-referrer">
            </div><p><figure><a class="lightgallery" href="https://img.fanrongbin.com/Courtesy_of_Dorte_Mandrup_Arkitekter_2.webp" title="Ilulissat Icefjord Center" data-thumbnail="https://img.fanrongbin.com/Courtesy_of_Dorte_Mandrup_Arkitekter_2.webp" data-sub-html="<h2>Ilulissat Icefjord Center. © Dorte Mandrup Arkitekter</h2><p>Ilulissat Icefjord Center</p>">
        
    </a><figcaption class="image-caption">Ilulissat Icefjord Center. © Dorte Mandrup Arkitekter</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="https://img.fanrongbin.com/IMG_0657.webp" title="Essaouira, Marokko, 2019" data-thumbnail="https://img.fanrongbin.com/IMG_0657.webp" data-sub-html="<h2>Essaouira, Marokko, 2019 © Lea Verholen</h2><p>Essaouira, Marokko, 2019</p>">
        
    </a><figcaption class="image-caption">Essaouira, Marokko, 2019 © Lea Verholen</figcaption>
    </figure></p>
<h2 id="摘录">摘录</h2>
<h3 id="周保松公共生活的意義">周保松：公共生活的意義</h3>
<blockquote>
<p>⋯⋯第三，承接以上所言，公共生活總意味著我們與他人在一起。我們在一起討論，一起行動，一起感受，也在一起改變。我們雖然有不同的身分，卻總希望在公共生活中彼此尊重，沒有人會因為出身、階級、性別、信仰等差異而受到歧視。公共生活很重要的一點，是看到和承認他人與你是平等的存在，享有同樣的權利。我們因此要學會聆聽、容忍和尊重不同的觀點。 公共性總是和開放、多元、民主這些價值聯結在一起。</p>
<p>以上三點，都是規範性的，反映我們對公共生活的期望，而不是說現實已經如此。我們正是見到現實的不理想，才特別提出這些面向，希望我們一起努力創造條件去實現這樣的公共生活。</p>
<p>⋯⋯公共生活是有力量的，當人與人走在一起，當人開始獨立思考，體制就會恐慌，因為他們知道自己那套東西早已經不起理性檢視。現在的社會控制，就是要將人趕回私人領域，把人變成耽於消費的經濟動物，從而令我們忽略、甚至忘記人同時也是社會存有和政治存有。</p>
</blockquote>
<p><a href="https://theinitium.com/article/20200927-opinion-notes-public-life/" target="_blank" rel="noopener noreffer">原文 →</a></p>
<h3 id="王小波积极的结论">王小波：积极的结论</h3>
<blockquote>
<p>我的积极结论是这样的：真理直率无比，坚硬无比，但凡有一点柔顺，也算不了真理。安徒生有一篇童话(光荣的荆棘路)，就是献给这些直率、坚硬的人，不过他提到的全是外国人。作为中国的知识分子，理应有自己的榜样。此刻我脑子里浮现出一系列名字：陈寅格教授，冯友兰教授，等等。说到陈教授，我们知道，他穷毕生精力，考据了一篇很不重要的话本，《再生缘》。想到这件事，我并不感到有多振奋，只是有点伤感。</p>
</blockquote>
<p>真理一定是坚硬的，但坚硬的不一定是真理，被视作坚不可摧的往往亦不过是玩物尔尔。不过，还有人最大的乐观主义，时间和死亡。既然知道至多是一场大火或迎来冰河，至少也有生死在这之中轮替，再无力时也多了一份安定。</p>
<h3 id="the-verge-with-matt-mullenweg-how-wordpress-and-tumblr-are-keeping-the-internet-weird">The Verge with Matt Mullenweg, <em>How WordPress and Tumblr are keeping the internet weird</em></h3>
<blockquote>
<p>&hellip;There’s people that are sharing. That’s really, really exciting to me because it’s kind of like the personal web&hellip;I go to a Medium article, or even a Substack article, and I read the article and I just remember Medium or Substack. I actually forget the author because the sites all kind of look the same. How do you bring that — not just the editorial voice, but also the visual personalization — that you can really have your own home on the web?</p>
<p>&hellip;I don’t think creators getting paid is dependent on blockchain technology. That’s a separate trend that’s happening that is part of the disintermediation of distributors. Essentially, what the social networks did was they allowed people to go more direct than before&hellip;The power is in the hands of creators. I love that salaries are going up for writers and editors and all these sorts of things.</p>
</blockquote>
<p>Automattic 一直给人感觉非常社区化、非常团结，从雇人的理念上就比较不同，更希望在对公司和产品真正感兴趣的人中招贤纳士。而且公司以及产品都非常注重社区的维护，例如 WordPress 的本地化，贡献者名单存放有序，而且 fully accessible。在开源和闭源、非盈利和盈利之间的微妙平衡，依然跟社区的形成不无关系，健康的用户社区自己就能把雪球越滚越大。</p>
<p>最近对「平台与个人」的问题也有所感触。文字载体、加入智能推荐算法的平台，往往存在「平台大于个人」的倾向。以 Medium 为例自然不用说，也可以从 Twitter 的发展中看到（尤其是时间线上智能推荐的加入）。读者能不能记得创作者这个人，一个是创作者的名字要绝对 show up，像 RSS 阅读器里订阅博客，博客的名字/作者的名字作 label。另一个是用户 discover 的参与度，通过内容溯及创作者和通过创作者溯及内容是完全不同的，后者第一印象就建立在创作者本身，而且参与度更高。</p>
<p>像 Matters 一直在说要做去中心化的写作社群，加入种种 web3 的技术和理念，如果没能扭转读者「认为平台大于个人」的倾向，那给写作者再多的工具也于事无补。</p>
<p><a href="https://www.theverge.com/2022/3/15/22977857/wordpress-tumblr-simplenote-internet-automattic-matt-mullenweg-interview" target="_blank" rel="noopener noreffer">原文 →</a></p>
<h3 id="cho-hae-joang-the-spec-generation-who-cant-say-no-overeducated-and-underemployed-youth-in-contemporary-south-korea-2015">Cho Hae-joang, <em>The Spec Generation Who Can’t Say &ldquo;No&rdquo;: Overeducated and Underemployed Youth in Contemporary South Korea</em>, 2015</h3>
<blockquote>
<p>&hellip;It seems that to them, kindness is something to be purchased. Since they do not expect kindness without financial compensation, they tend to be moved by a little kindness and caring by professors..They have deeply internalized the principle of the “survival of the fittest,” while having little sense of “deserving inalienable rights” as students, as children, or as members of society.</p>
<p>&hellip;I found the enlightening distinction Michel Feher draws between the free laborer of liberal capitalism and the labor subjectivity of neoliberal capitalism that is generated and maintained through an endless process of human capital development&hellip;To Feher, liberal capitalism draws on the concept of the free laborer, which is understood as a social being&hellip;Free laborers think of their labor power as commodity but believe that they themselves are not commodities.</p>
<p>&hellip;A student confirmed her observation, saying, &ldquo;I feel bad thinking that I have to feel guilty for not getting involved.&rdquo; In fact, many of my students work hard to block reality out of their lives so that they could avoid being disrupted and disturbed.</p>
</blockquote>
<p>韩语中有个外来词叫 &lsquo;스펙&rsquo;（specification），意思为「各种能证明自己能力和履历的证书、文凭、资格证等」。英语里 specification 往往作「规格；说明书」等义更常见，就像一场语言上的巧合，嵌入人被物化的简单事实。延世大名誉教授趙韓惠貞在 2015 年发表的这篇论文，关注的焦点在于韩国的「过度教育」问题、年轻人在校的「冷感」以及进入社会后的「半失业」状态。她认为这样一场对学历的追逐、对（阶层上的）安稳的希望以及衍生出对自我与社会的冷漠（特别是与轰轰烈烈的上世纪 80-90 年代相比而言），与自由资本主义向新自由主义的转型不无关系。</p>
<p>她引 Michel Feher 的观点，Feher 首先区分出新自由主义的产生和维持依赖于无休止的人力资本。进而关注微观个人，认为诞生出一种新的劳动主体即新自由主义主体，他们并不拥有人力资本，却要对人力资本进行投资，结合经济学，劳动者应当追求投资的收益最大化，同时收益应该具有一定的可测度性，进而无可奈何地适应资本导向，放弃在自我、社会与政治方面的边界与分寸。韩国教育市场在进入千禧年后私人化程度已经臻于成熟，所以家庭在这场主体转型中也扮演着格外重要的角色。</p>
<p>趙韓惠貞教授结合新闻与授课中的实际案例，在文中给出了多个放弃或模糊了社会再生产与自我成就、社会责任之间边界的侧面。这里再具体拿「政治冷感」说，学生们格外认同「避免不必要麻烦」的这个出发点，希望努力把社会现实阻挡在自己的生活之外，不希望再被「侵蚀」。政治家在这场「进化」中也顺利通过合作，把自己从人人皆应承担的责任转变为多数人趋于回避的生活麻烦。</p>
<p>东亚共享太多剧情和副本，你争我赶地保持不为所动，年轻人的路收窄成「奴隶」和「抑郁」两条。已经完成重构的日本、动态中的韩国、还仅是瞥见黑夜正在来临的中国，各自有命。</p>
<p><a href="https://doi.org/10.1215/10679847-3125823" target="_blank" rel="noopener noreffer">DOI.org/10.1215/10679847-3125823</a></p>
<h3 id="casey-winters-featureproduct-fit">Casey Winters, <em>Feature/Product Fit</em></h3>
<blockquote>
<p>&hellip;Feature/Product Fit has a similar process. We’ll call this the Feature/Product Fit Checklist:</p>
<ul>
<li>The feature has to retain users for that specific feature</li>
<li>The feature has to have a scalable way to drive its own adoption</li>
</ul>
<p>Mistakes Feature Teams make searching for feature/product fit:</p>
<ul>
<li>Mistake #1: Email your entire user base about your new feature</li>
<li>Mistake #2: Put a banner at the top of the product for all users introducing the new feature</li>
<li>Mistake #3: Launch with a lot of press about the new feature</li>
</ul>
</blockquote>
<p>原文拿 Pinterest 举例，非常精准：</p>
<ol>
<li>Like 和 Pin 同时存在，高频/一级按钮定义的不明，用户到底该用哪个？</li>
<li>地点 Pin 事实上把 Pin、Board 与用户之间的距离拉的更远；</li>
<li>网格显示方式下 Pin 创建者的露出，反而退回到底是搭建「社交」网络还是「兴趣」网络的岔路口，同时也无谓地占据了更多的显示空间（它本身很难说形成 KOL 或有频繁发布的用户存在）。</li>
</ol>
<p><a href="https://caseyaccidental.com/feature-product-fit/" target="_blank" rel="noopener noreffer">原文 →</a></p>
<h3 id="wesley-aptekar-cassels-a-few-things-that-could-be-poetry">Wesley Aptekar-Cassels, <em>A few things that could be poetry</em></h3>
<blockquote>
<ul>
<li>The right combination of street signs, viewed from a artful vantage point</li>
<li>Words on bit of packaging, torn to reveal and conceal as needed</li>
<li>The output of a command line tool, perhaps unexpectedly</li>
<li>Overheard words, drifting along, liberated from their initial context</li>
<li>A form, at first appearing bureaucratic, revealing humanity on deeper reflection</li>
<li>An idea, if you consider it divine enough</li>
</ul>
</blockquote>
<p><a href="https://notebook.wesleyac.com/could-be-poetry/" target="_blank" rel="noopener noreffer">原文 →</a></p>
<hr>
<p>Hybrid 是一个内容摘录计划。<a href="https://fanrongbin.com/hybrid-1" target="_blank" rel="noopener noreffer">按此</a>可以查看上一期。</p>
<hr>
<p></p>
<p>Ambient EP &ldquo;Scene&rdquo; 已在 <a href="https://econ105.bandcamp.com/album/scene" target="_blank" rel="noopener noreffer">Bandcamp</a> 与 <a href="https://soundcloud.com/econ105/sets/scene" target="_blank" rel="noopener noreffer">SoundCloud</a> 上架。</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=1016704083/size=large/bgcol=ffffff/linkcol=63b2cc/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://econ105.bandcamp.com/album/scene">Scene by ECON105</a></iframe>]]></description>
</item><item>
    <title>Windows 11 的新字体：Segoe UI Variable</title>
    <link>https://fanrongbin.com/segoe-ui-variable/</link>
    <pubDate>Wed, 30 Mar 2022 00:00:00 &#43;0000</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/segoe-ui-variable/</guid><description><![CDATA[<p>微软在 2021 年 5 月 6 日于 Windows 10 Insider Preview Build 21376 <a href="https://blogs.windows.com/windows-insider/2021/05/06/announcing-windows-10-insider-preview-build-21376/" target="_blank" rel="noopener noreffer">发布</a>了 Segoe UI 的可变字体版本：Segoe UI Variable，<a href="https://docs.microsoft.com/en-us/windows/apps/design/signature-experiences/typography" target="_blank" rel="noopener noreffer">在 Windows 11 </a>正式作为系统默认字体。得益于可变字体特性，Segoe UI Variable 可以根据不同的字重选择做出调整，在低分屏下也具有较高可读性。此次还同步推出了 Text 和 Display 两个版本，前者常用于内文，后者的装饰性元素或字体的风格更加突出，所以更常用于标题。Text 版本增加字重，x-字高更高，字母的开口以及间距更大。Display 版本字母尾部曲度更大，字间距对应缩紧，存在感更强。</p>
<p></img></p>
<p></img></p>
<p>风格上与旧 Segoe UI 相比，Segoe UI Variable 更圆，字母尾部增加曲度并切平，同时去掉了字母 I 和数字 1 的 crossbars，字母 Q 的小尾巴缩短改平直，整体更干练和紧凑，<del>看起来也更像 Product Sans 了。</del></p>
<p></img></p>
<p>可以通过 Windows 的<a href="https://docs.microsoft.com/en-us/windows/apps/design/downloads/#fonts" target="_blank" rel="noopener noreffer">官方文档</a>，或直接访问<a href="https://aka.ms/SegoeUIVariable" target="_blank" rel="noopener noreffer">此链接</a>下载 Segoe UI Variable。</p>
]]></description>
</item><item>
    <title>在 Big Sur 安装 PocketSphinx 时出现的问题</title>
    <link>https://fanrongbin.com/pocketsphinx-install-errors/</link>
    <pubDate>Thu, 17 Feb 2022 00:00:00 &#43;0000</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/pocketsphinx-install-errors/</guid><description><![CDATA[<h2 id="确认安装了swig">确认安装了<code>swig</code></h2>
<p>首先确认是否安装了<code>swig</code>，否则运行<code>setup.py</code>报错：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">error: command &#39;swig&#39; failed: No such file or directory
</code></pre></td></tr></table>
</div>
</div><h2 id="修改-openal-的位置">修改 OpenAL 的位置</h2>
<p>似乎对于 Catalina 以及后续版本，都需要在<code>setup.py</code>中修改<code>OpenAL</code>的位置：</p>
<p>修改第 235 行：<code>sb_include_dirs.append('/System/Library/Frameworks/OpenAL.framework/Versions/A/Headers')</code>为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">sb_include_dirs.append(&#39;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenAL.framework/Versions/A/Headers&#39;)
</code></pre></td></tr></table>
</div>
</div><p>修改第 242 行：<code>extra_objects=['/System/Library/Frameworks/OpenAL.framework/Versions/A/OpenAL'],</code>为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">extra_objects=[&#39;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenAL.framework/Versions/A/OpenAL.tbd&#39;],
</code></pre></td></tr></table>
</div>
</div><h2 id="修改调用头文件的名字">修改调用头文件的名字</h2>
<p>对于报错：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">fatal error: &#39;al.h&#39; file not found
      #include &lt;al.h&gt;
               ^~~~~~
      1 error generated.
error: command &#39;/usr/bin/gcc&#39; failed with exit code 1
</code></pre></td></tr></table>
</div>
</div><p>需要对<code>/pocketsphinx-python/deps/sphinxbase/src/libsphinxad/ad_openal.c</code>中的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">#include &lt;al.h&gt;
#include &lt;alc.h&gt;
</code></pre></td></tr></table>
</div>
</div><p>修改为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">#include &lt;OpenAL/al.h&gt;
#include &lt;OpenAL/alc.h&gt;
</code></pre></td></tr></table>
</div>
</div><h2 id="参考">参考</h2>
<ul>
<li><a href="https://github.com/bambocher/pocketsphinx-python/issues/28" target="_blank" rel="noopener noreffer">Trouble installing on osx &ldquo;fatal error: &lsquo;al.h&rsquo; file not found&rdquo; #28</a></li>
<li><a href="https://github.com/bambocher/pocketsphinx-python/issues/67" target="_blank" rel="noopener noreffer">Trouble installing on Mac OS Big Sur 11.0.1 &ldquo;fatal error: &lsquo;al.h&rsquo; file not found&rdquo; #67</a></li>
</ul>
]]></description>
</item><item>
    <title>Hybrid #1</title>
    <link>https://fanrongbin.com/hybrid-1/</link>
    <pubDate>Sat, 05 Feb 2022 00:00:00 &#43;0800</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/hybrid-1/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.fanrongbin.com/n-1.webp" referrerpolicy="no-referrer">
            </div><hr>
<p><figure><a class="lightgallery" href="https://img.fanrongbin.com/n-2.webp" title="莎玛丽丹百货公司" data-thumbnail="https://img.fanrongbin.com/n-2.webp" data-sub-html="<h2>莎玛丽丹百货公司 La Samaritaine © Simón García | arqfoto</h2><p>莎玛丽丹百货公司</p>">
        
    </a><figcaption class="image-caption">莎玛丽丹百货公司 La Samaritaine © Simón García | arqfoto</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="https://img.fanrongbin.com/n-3.webp" title="The Optimism of Possibility" data-thumbnail="https://img.fanrongbin.com/n-3.webp" data-sub-html="<h2>The Optimism of Possibility © Phillip Reed</h2><p>The Optimism of Possibility</p>">
        
    </a><figcaption class="image-caption">The Optimism of Possibility © Phillip Reed</figcaption>
    </figure></p>
<h2 id="摘录">摘录</h2>
<h3 id="林宏信母語者心態">林宏信：母語者心態</h3>
<blockquote>
<p>「母語者心態」是無法為他人帶來幫助的，然而這不容易避免，畢竟每個人都有這麼多差異，大家都可能是某方面的「母語者」，難以去理解他人所面臨到的困難。我想首先要察覺到自己與別人的不同，建立正確的認知，才能真正幫助到他人。</p>
</blockquote>
<p>自主、自然的学习往往需要前期有一定程度的投入，未起步的人即使对这些所谓的学习方式有所认知，也极大可能仍在原地踏步。每个人都可能在某个领域存在一定投入，是这个领域的「精通者」，或多或少在遇到来自新手的提问时感到有些疑惑，「为什么他就不能想到我所想到的呢？」，无法先站在对方的角度理解其全程经历的困难，这便是母语者心态了。除了察觉不同、建立认知外，我想还需要把对方的问题不断细化，才能一点一点重新来过。</p>
<p><a href="https://www.wancat.cc/post/native-speaker/" target="_blank" rel="noopener noreffer">原文 →</a></p>
<h3 id="马华灵身份自由主义的困境">马华灵：身份自由主义的困境</h3>
<blockquote>
<p>身份政治的大麻烦是去公民政治。但是，公共自由主义并不排斥身份政治。这是因为身份自由主义一败涂地，表面上根源于身份政治，而实质上根源于去公民政治。如果美国自由派能够从身份政治走向公民政治，那么身份政治依旧可以从分裂的政治走向团结的政治。身份自由主义是排他性的（exclusive），它以自我为中心，只关心跟自己的身份息息相关的事务，而不关心跟自己的身份毫无干系的事务。但是，公共自由主义却是包容性的（inclusive），它不仅仅关心跟自己的身份息息相关的事务，而且还从自己的身份出发走向更广大的公民同胞。</p>
</blockquote>
<p>身份政治的一大弊病是其无穷无尽分裂的特性，走到最后人人视对方为异己、形同陌路，个人主义的实质决定其自身被终结的命运。从身份政治走向公民政治，亦正是从分裂走向团结，从诉诸运动转向诉诸选举。在冲突中进化，但最终只得在包容中收获。</p>
<p><a href="https://matters.news/@ififififif/%e9%a9%ac%e5%8d%8e%e7%81%b5-%e8%ba%ab%e4%bb%bd%e8%87%aa%e7%94%b1%e4%b8%bb%e4%b9%89%e7%9a%84%e5%9b%b0%e5%a2%83-bafyreihw65m2deos74iaxxjis75j2kierk252khpxqvbdmfesunleq2seq" target="_blank" rel="noopener noreffer">原文 →</a></p>
<h3 id="paul-graham-what-youll-wish-youd-known">Paul Graham, <em>What You&rsquo;ll Wish You&rsquo;d Known</em></h3>
<blockquote>
<p>The only real difference between adults and high school kids is that adults realize they need to get things done, and high school kids don&rsquo;t. That realization hits most people around 23. But I&rsquo;m letting you in on the secret early. So get to work. Maybe you can be the first generation whose greatest regret from high school isn&rsquo;t how much time you wasted.</p>
</blockquote>
<ul>
<li>做那些能在未来带来更多选择的选择</li>
<li>叛逆和服从一样愚蠢</li>
<li>别忘了自己所感兴趣的事情</li>
<li>现在就把事情做好、做完</li>
</ul>
<p><a href="http://www.paulgraham.com/hs.html" target="_blank" rel="noopener noreffer">原文 →</a></p>
<h3 id="david-rand-the-psychology-of-misinformation">David Rand, <em>The Psychology of Misinformation</em></h3>
<p>什么因素让我们更加相信某条信息，<strong>不论这条信息真实与否</strong>？</p>
<ul>
<li>重复（repetition）</li>
<li>与已知信念保持一定的一致性（consistency with existing beliefs）（也常和单一信源「圈养」出的个人偏好有关）</li>
<li>被信任的信源（trusted sources）</li>
</ul>
<p>过去总谈论要对信息源做出筛选，希望尽可能从源头避免得到错误或受到污染的信息。构建起一个比较完善的喂食器之后，对待这些粗浅过滤的信息也依然需要同对待外界其他事物一样，保持距离和警惕。关注事件<strong>本身</strong>的构成（时间地点人物）和叙述中是否存在加工等，关注上述从其他方面加深相信可能的因素。这些因素在逻辑论证时也常常被用来混淆视听。</p>
<p><a href="https://youtu.be/TiO77Pdec78" target="_blank" rel="noopener noreffer">原视频 →</a></p>
<hr>
<p>Hybrid 是一个内容摘录计划。</p>
]]></description>
</item><item>
    <title>糕点铺</title>
    <link>https://fanrongbin.com/bakery/</link>
    <pubDate>Fri, 28 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/bakery/</guid><description><![CDATA[<p>实习，住在团结湖，附近有一家糕点铺，晚上下班总要路过它。门口常常排着不长不短的队，几乎每次我都会装作心不在焉地往亮堂堂的橱窗一瞥，看看今天是绿豆酥饼卖得好，还是有新面包出炉。暗地里，我也决定找个时间也去排排队，买一盒试试看。今天是这个月最后一天班，坐上公交，想象那条刚认识没多久的路，先过路口，拐弯，直行，再走到对面，就能到糕点铺了。刷卡下车后我抬起头走路，可劲儿往对面瞧，却怎么也看不到那面墨绿色的招牌，一时以为是自己搞混了。怀疑的脚步越来越近，才发现关了灯、拉了铁门，赖以辨认的人群四散。今天已经是廿六了，后天回家，节后总要再过来。「所以总有机会吧」，这么想着，埋头往别处走了。</p>
<p>过去好像也是这么想的，以为是沙子，总在那里。以为像钱，攒起来当然就越攒越多。现在，恍惚间意识到自己再回来买酥饼的希望过分渺茫，被这样一份不可知不可触的酥饼想象击碎。我化成饮食大欲碎在地上，拼不成什么要「把握住机会」和「活在当下」的道理戒律，如此这般活，由着很多事情错过。</p>
]]></description>
</item><item>
    <title>芯片制作工序 &amp; 半导体常见自动化软件模块梳理</title>
    <link>https://fanrongbin.com/semiconductor-procedure/</link>
    <pubDate>Thu, 27 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/semiconductor-procedure/</guid><description><![CDATA[<p><a href="https://blog.robertelder.org/how-to-make-a-cpu/" target="_blank" rel="noopener noreffer">这篇图文</a>能更好帮助理解。</p>
<h2 id="芯片制作工序">芯片制作工序</h2>
<div class="mermaid" id="id-1"></div>
<p>参考自泛林集团科普文章：<a href="https://mp.weixin.qq.com/s?__biz=MzAwMjc5MzEyMA==&amp;mid=2653071344&amp;idx=1&amp;sn=5afa34f0343fe651c352fb1db90e4078&amp;chksm=81130c3fb66485295c95b0ebc4e5809c476ec251c6744f70ab90a44ca5a541c49441ccf3ba7b" target="_blank" rel="noopener noreffer">上篇</a>、<a href="https://mp.weixin.qq.com/s?src=11&amp;timestamp=1643333829&amp;ver=3585&amp;signature=6IlC6FZHoNgcGlFXYQmK00U0kkordqNzxXlGsuIi0sDeMcxJTa97kEv4PTwKJHS8sKsbm7TCcVpKdw5j-GkNlI6B8zB3SOQudBhCx*Q*bikIKvrrxLbecGT*jbEQgSM1&amp;new=1" target="_blank" rel="noopener noreffer">中篇</a>、<a href="https://mp.weixin.qq.com/s?src=11&amp;timestamp=1643333829&amp;ver=3585&amp;signature=6IlC6FZHoNgcGlFXYQmK00U0kkordqNzxXlGsuIi0sBk7gTvrMy2efEIgPI-nvRVI4eGDu1UKmkBgwpES6RWt2*uv5-F6UX4qWh*0OTkISc77QkceIHU7l0o6yuay4gx&amp;new=1" target="_blank" rel="noopener noreffer">下篇</a>。英文对照请见<a href="#%e5%8d%8a%e5%af%bc%e4%bd%93%e5%88%b6%e4%bd%9c%e5%b7%a5%e5%ba%8f%e8%8b%b1%e6%96%87%e4%b8%8d%e5%ae%8c%e5%85%a8%e5%af%b9%e7%85%a7" rel="">文末</a>。你也可以<a href="https://www.tel.com/museum/exhibition/process/" target="_blank" rel="noopener noreffer">按此访问</a>东京威力科创制作的工序介绍。</p>
<p>制作工序可分为前、后两道。前道包括 <code>1.晶圆加工</code> -&gt;<code> 7.测试</code>，后道包括<code>8.封装</code>及后期测试、其他组装、成品入库等。</p>
<p>常用英文名词：</p>
<ul>
<li>wafer：晶圆，硅晶片。分有 6、8、12 吋。</li>
<li>die：裸晶。wafer 上的小单位颗粒。合格的 die 在第八步封装时被切走为成品颗粒。</li>
<li>cell：比 die 更小的单位，如 IO 单元、电源管理单元。</li>
<li>cassette：晶盒。用来装 wafer。
<ul>
<li>FOUP（Front Opening Unified Pod）：前开晶片（统一）传送盒。一般用于厂内运输 wafer。</li>
<li>FOSB（Front Opening Shipping Box）：前开晶片运输盒。一般用于厂间成品或半成品运输。</li>
</ul>
</li>
<li>lot：批次。</li>
<li>recipe：制程配方。</li>
<li>equipment：机台，加工线上的所有设备。</li>
<li>fab（Semiconductor Fabrication Plant）：半导体制造厂。</li>
<li>WAT（Wafer Acceptance Test）：晶圆允收测试</li>
<li>UAT（User Acceptance Test）：用户允收测试</li>
<li>CP Yield（Circuit Probe Yield）：晶圆测试良率</li>
<li>RFP/RP（Request for Proposal）：需求建议书</li>
</ul>
<p>半导体行业有几种常见商业模式：</p>
<ul>
<li>Foundry：晶圆代工，负责晶圆制造、封装或测试中的一个或多个环节。如台积电。</li>
<li>IDM：包括 IC 设计、晶圆制造、封装测试等多个环节。如三星。</li>
<li>Fabless：只负责 IC 设计和销售，其他环节外包。如联发科。</li>
</ul>
<h2 id="半导体行业常用工业软件">半导体行业常用工业软件</h2>
<p>对于半导体厂内<em>自动化系统</em>常用工业软件，一般可分为四个层级：</p>
<h3 id="计划管理决策层">计划管理/决策层</h3>
<ul>
<li><strong><ruby>ERP<rt>企业资源计划</rt></ruby></strong>（Enterprise Resource Planning）</li>
<li><strong><ruby>SCM<rt>供应链管理</rt></ruby></strong>（Supply Chain Management）</li>
<li><strong><ruby>PLM<rt>产品生命周期管理</rt></ruby></strong>（Product Lifecycle Management）</li>
<li><strong><ruby>WMS<rt>仓储管理系统</rt></ruby></strong>（Warehouse Management System）</li>
<li><strong><ruby>OA<rt>办公自动化</rt></ruby></strong>、<strong><ruby>CRM<rt>消费者关系管理</rt></ruby></strong>、<strong><ruby>APS<rt>先进计划和排程</rt></ruby></strong>（Advanced Planning and Scheduling）等</li>
</ul>
<h3 id="计算机集成制造层">计算机集成制造层</h3>
<p><strong><ruby>CIM<rt>计算机集成制造</rt></ruby></strong>（Computer Integrated Manufacturing）</p>
<ul>
<li>制造管理和监测</li>
<li>制造执行
<ul>
<li><strong><ruby>MES<rt>制造执行系统</rt></ruby></strong>（Manufacturing Execution System）</li>
<li><strong><ruby>RTD<rt>实时派工系统</rt></ruby></strong>（Real-time Dispatch）</li>
<li><strong><ruby>SPC<rt>统计制程控制</rt></ruby></strong>（Statistical Process Control）</li>
</ul>
</li>
</ul>
<h3 id="一般控制层">一般控制层</h3>
<ul>
<li>自动化系统
<ul>
<li><strong><ruby>EAP<rt>设备自动化程序</rt></ruby></strong>（Equipment Automatic Programme)</li>
</ul>
</li>
<li><strong><ruby>EES<rt>设备工程系统</rt></ruby></strong>（Equipment Engineer System）
<ul>
<li><strong><ruby>APC<rt>先进过程控制</rt></ruby></strong>（Advanced Process Control）
<ul>
<li>一般会认定其包含 <strong><ruby>R2R<rt>批次控制</rt></ruby></strong>（Run-to-Run）、FDC、<strong><ruby>OEE<rt>整体设备效率</rt></ruby></strong>（Overall Equipment Efficiency），但包含关系和范围没有明显界定</li>
</ul>
</li>
<li><strong><ruby>FDC<rt>故障侦测与分类</rt></ruby></strong>（Fault Detection and Classification）</li>
<li><strong><ruby>PMS<rt>预防保养系统</rt></ruby></strong>（Preventive Maintenance System）</li>
<li><strong><ruby>YMS<rt>良率管理系统</rt></ruby></strong>（Yield Management System）</li>
<li><strong><ruby>TMS<rt>运输管理系统</rt></ruby></strong>（Transportation Management System）</li>
<li><strong><ruby>RMS<rt>Recipe/配方管理系统</rt></ruby></strong>（Recipe Management System）</li>
<li>与 <strong><ruby>AMHS<rt>自动物料搬送系统/天车</rt></ruby></strong>（Automatic Material Handling System）的配合</li>
</ul>
</li>
</ul>
<h3 id="现场设备层机台">现场设备层：机台</h3>
<ul>
<li><strong><ruby>PLC<rt>可编程逻辑控制器</rt></ruby></strong>（Programmable Logic Controller）</li>
<li>其他 censor 等</li>
</ul>
<hr>
<p>CIM 主体包括 <strong>MES</strong> 和 <strong>EAP</strong>。MES 负责车间生产管理和调度执行，实时监控生产过程并响应状态变化。EAP 对接 MES 和机台设备，负责信息传输、数据搜集、流程控制和异常捕捉。因而 APC、FDC、 PMS 等系统通常都围绕 EAP 运作。</p>
<p>EAP 与 MES 等其他系统间通讯采用 Tibco RV 协议、与机台设备间通讯采用 SECS/GEM 等等协议。</p>
<div class="mermaid" id="id-2"></div>
<h3 id="市场主要厂商">市场主要厂商</h3>
<p>前道 CIM：</p>
<ul>
<li>IBM（SiView）</li>
<li>应用材料（Applied Materials）（FAB300）</li>
</ul>
<p>MES：</p>
<ul>
<li>西门子（Siemens）</li>
<li>霍尼韦尔（Honeywell Forge）</li>
<li>艾默生（Emerson）</li>
<li>罗克韦尔（Rockwell Automation）</li>
<li>达索（Dassault）</li>
<li>ABB Ability</li>
</ul>
<p>YMS 多独立厂家，如 Synopsys（Synopsys Odyssey）。</p>
<p>后道封装：</p>
<ul>
<li>西门子（CAMSTAR、SIMATIC IT）</li>
</ul>
<h2 id="mes车间的头子">MES：「车间的头子」</h2>
<p>MES 上接计划层（如 ERP），下接一般控制层（如 EAP 或 <strong><ruby>SCADA<rt>监控与资料收集系统</rt></ruby></strong>），主要面向在现场一线操作的车间管理人员。实际上是多个模块集中呈现的平台，针对整个工厂，对稳定性要求较高。实际解决方案包括：</p>
<ul>
<li>计划排程管理</li>
<li><strong><ruby>PRP<rt>生产工艺流程</rt></ruby></strong>（Process Plan）：对生产的流程进行四层抽象（从单个 <strong><ruby>operation<rt>操作</rt></ruby></strong> 到连接成 <strong><ruby>stage<rt>步骤</rt></ruby></strong>，再连接为一个大的 <strong><ruby>layer<rt>层</rt></ruby></strong>，最后成为一条完整的 <strong><ruby>route<rt>路径</rt></ruby></strong>）</li>
<li><strong><ruby>WIP<rt>制品管理模块</rt></ruby></strong>（Wafer in Process）：创建批次、查询批次、报废批次等批次相关的处理</li>
<li>设备管理</li>
<li>数据管理</li>
<li>报表管理</li>
<li><strong><ruby>GUI<rt>图形界面设计</rt></ruby></strong>：包括面向生产线操作员和面向工艺工程师等不同界面</li>
</ul>
<h2 id="eap搜集信息传达指令">EAP：搜集信息、传达指令</h2>
<p>EAP 上接 MES，下接机台设备。MES 所管理的各项数据都来自 EAP。EAP 先搜集所有生产数据和机台状态数据，再经由特定通讯协议传送到 MES 数据库，MES 再借由数据分析监控设备和生产流程。其同时也是整个 CIM 中其他模块的数据源。</p>
<p>例如生产状态的变化：由 EAP <strong>告知</strong> MES 一批货物状态的变化，MES <strong>改变</strong>这批货物的状态。</p>
<div class="mermaid" id="id-3"></div>
<p>对比单纯进行数据采集和一定图形界面化呈现的 SCADA，EAP 能配合其他模块达到生产自动化的要求、作为管理平台、融合 <strong><ruby>BI<rt>商业智能</rt></ruby></strong>（business intelligence）分析。</p>
<h2 id="apc管控过程提升良率">APC：管控过程、提升良率</h2>
<p>半导体量产中，由于投资规模庞大，良率哪怕能做到 1% 的提升，都能带来非常可观的收益增加。APC 就是一种提升良率或产能的综合解决方案。一般包括 R2R、FDC、OEE。在制程执行时，期间存在各种影响因素导致量产出的晶圆存在差异，需要通过实时监控影响因素变化的参数来提升良率或产能，而这依赖于 APC 对数据的搜集，包括 <strong><ruby>DCU<rt>数据收集单元</rt></ruby></strong>（Data Collection Unit）主动收集的资料以及对其他系统（如 MES、PMS 等）资料的运用。</p>
<p>有关 APC 的更多信息，可<a href="http://franktsao.blogspot.com/2009/10/apc.html" target="_blank" rel="noopener noreffer">按此访问</a>鼎捷软件曹永诚所撰导论（2005 年 6 月，Blogspot 链接）。</p>
<h2 id="关于-amhs">关于 AMHS</h2>
<p>12 吋厂线的 RTD 多与 AMHS 搭配使用以达到更高程度的自动化，通常还与 <strong><ruby>MCS<rt>物料控制系统</rt></ruby></strong>（Material Control System） 一起运作。RTD 针对制程情况给出派货建议，未配备 AMHS 的工厂一般通过人工运输，配备 AMHS 则可以相互通讯以自动运输。AMHS 中各种器械有序灵活的运作，能让人直观感受到工业制造具备的魅力。一般包括：</p>
<ul>
<li><strong><ruby>OHT<rt>空中行走式/高架搬运系统</rt></ruby></strong>（Overhead Hoist Transfer），多用在加工区间内（Intra-bay），也可用于不同区间之间（Inter-bay）或覆盖全厂（factory wide）的运输。</li>
<li><strong><ruby>OHS<rt>空中行走式/高架搬运车</rt></ruby></strong>（Overhead Shuttle），常用于不同仓储设备间（也称 Inter-bay Transport System）。</li>
<li><strong><ruby>AGV<rt>自动导引车</rt></ruby></strong>（Automated Guided Vehicle），常用在复杂路径。</li>
<li><strong><ruby>RGV<rt>有轨导引车</rt></ruby></strong>（Rail Guided Vehicle），轨道运输，带机械臂。</li>
</ul>
<h2 id="芯片制作工序英文不完全对照">芯片制作工序：英文不完全对照</h2>
<div class="mermaid" id="id-4"></div>
]]></description>
</item><item>
    <title>C&#43;&#43; 模版类重载流输入输出运算符</title>
    <link>https://fanrongbin.com/cpp-template-friend/</link>
    <pubDate>Fri, 31 Dec 2021 22:48:59 &#43;0800</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/cpp-template-friend/</guid><description><![CDATA[<p>在 C++ 中只能通过友元函数来重载流输入输出运算符 <code>&lt;&lt;</code> <code>&gt;&gt;</code>。由于搭配模板类的使用，编译器可能在对应编译友元函数时<strong>无法确定</strong>其为模版，需要事先声明。</p>
<h2 id="方法-1提前声明并使用--确认">方法 1：提前声明并使用 &lt;&gt; 确认</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp"></span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="c1">//需要提前进行声明，以使类中对友元函数的声明进一步确认函数为模板函数
</span><span class="c1"></span><span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">complex</span><span class="p">;</span>
<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span> <span class="n">ostream</span> <span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">ostream</span> <span class="o">&amp;</span><span class="n">newout</span><span class="p">,</span> <span class="k">const</span> <span class="n">complex</span><span class="o">&lt;</span><span class="n">A</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">);</span>

<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span>
<span class="k">class</span> <span class="nc">complex</span><span class="p">{</span> <span class="c1">//以复数类为例
</span><span class="c1"></span>  <span class="k">private</span><span class="o">:</span>
  	<span class="n">A</span> <span class="n">real</span><span class="p">,</span> <span class="n">image</span><span class="p">;</span>
	<span class="k">public</span><span class="o">:</span>
		<span class="n">complex</span><span class="p">(</span><span class="n">A</span> <span class="n">a</span><span class="p">,</span> <span class="n">A</span> <span class="n">b</span><span class="p">)</span><span class="o">:</span><span class="n">real</span><span class="p">(</span><span class="n">a</span><span class="p">),</span><span class="n">image</span><span class="p">(</span><span class="n">b</span><span class="p">){</span>
		<span class="p">}</span>

<span class="c1">//在运算符 &lt;&lt; 后加入 &lt;&gt; 以帮助编译器进一步确定该友元函数为模板函数
</span><span class="c1"></span>		<span class="k">friend</span> <span class="n">ostream</span> <span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="o">&lt;&gt;</span><span class="p">(</span><span class="n">ostream</span> <span class="o">&amp;</span><span class="n">newout</span><span class="p">,</span> <span class="k">const</span> <span class="n">complex</span><span class="o">&lt;</span><span class="n">A</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">);</span> 
<span class="p">};</span> 

<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span>
<span class="n">ostream</span> <span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">ostream</span> <span class="o">&amp;</span><span class="n">newout</span><span class="p">,</span> <span class="k">const</span> <span class="n">complex</span><span class="o">&lt;</span><span class="n">A</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">){</span>
	<span class="n">newout</span><span class="o">&lt;&lt;</span><span class="s">&#34;(&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">real</span><span class="o">&lt;&lt;</span><span class="s">&#34;,&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">image</span><span class="o">&lt;&lt;</span><span class="s">&#34;)&#34;</span><span class="p">;</span>
	<span class="k">return</span> <span class="n">newout</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">complex</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">a</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span> 
</code></pre></td></tr></table>
</div>
</div><h2 id="方法-2在声明友元函数的同时定义友元函数">方法 2：在声明友元函数的同时定义友元函数</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp"></span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span>
<span class="k">class</span> <span class="nc">complex</span><span class="p">{</span>
	<span class="k">private</span><span class="o">:</span>
		<span class="n">A</span> <span class="n">real</span><span class="p">,</span> <span class="n">image</span><span class="p">;</span>
	<span class="k">public</span><span class="o">:</span>
		<span class="n">complex</span><span class="p">(</span><span class="n">A</span> <span class="n">a</span><span class="p">,</span> <span class="n">A</span> <span class="n">b</span><span class="p">)</span><span class="o">:</span><span class="n">real</span><span class="p">(</span><span class="n">a</span><span class="p">),</span><span class="n">image</span><span class="p">(</span><span class="n">b</span><span class="p">){</span>
		<span class="p">}</span>

<span class="c1">//在声明友元函数的同时定义友元函数
</span><span class="c1"></span>		<span class="k">friend</span> <span class="n">ostream</span> <span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">ostream</span> <span class="o">&amp;</span><span class="n">newout</span><span class="p">,</span> <span class="k">const</span> <span class="n">complex</span><span class="o">&lt;</span><span class="n">A</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">){</span>
			<span class="n">newout</span><span class="o">&lt;&lt;</span><span class="s">&#34;(&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">real</span><span class="o">&lt;&lt;</span><span class="s">&#34;,&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">image</span><span class="o">&lt;&lt;</span><span class="s">&#34;)&#34;</span><span class="p">;</span>
			<span class="k">return</span> <span class="n">newout</span><span class="p">;</span>
		<span class="p">}</span>
<span class="p">};</span> 

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">complex</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">a</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span> 
</code></pre></td></tr></table>
</div>
</div><h2 id="如果可以不使用友元函数">如果可以不使用友元函数</h2>
<p>如果模板类中的成员为公有，则完全不需要在模板类中声明友元。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp"></span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span>
<span class="k">class</span> <span class="nc">complex</span><span class="p">{</span>
	<span class="k">public</span><span class="o">:</span>
		<span class="n">A</span> <span class="n">real</span><span class="p">,</span> <span class="n">image</span><span class="p">;</span> <span class="c1">//成员为公有
</span><span class="c1"></span>		<span class="n">complex</span><span class="p">(</span><span class="n">A</span> <span class="n">a</span><span class="p">,</span> <span class="n">A</span> <span class="n">b</span><span class="p">)</span><span class="o">:</span><span class="n">real</span><span class="p">(</span><span class="n">a</span><span class="p">),</span><span class="n">image</span><span class="p">(</span><span class="n">b</span><span class="p">){</span>
		<span class="p">}</span>
<span class="c1">//		friend ostream &amp; operator &lt;&lt; &lt;&gt;(ostream &amp;newout, const complex&lt;A&gt; &amp;m);
</span><span class="c1">//友元在此是不必要的
</span><span class="c1"></span><span class="p">};</span> 

<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">A</span><span class="o">&gt;</span>
<span class="n">ostream</span> <span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">ostream</span> <span class="o">&amp;</span><span class="n">newout</span><span class="p">,</span> <span class="k">const</span> <span class="n">complex</span><span class="o">&lt;</span><span class="n">A</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">){</span>
	<span class="n">newout</span><span class="o">&lt;&lt;</span><span class="s">&#34;(&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">real</span><span class="o">&lt;&lt;</span><span class="s">&#34;,&#34;</span><span class="o">&lt;&lt;</span><span class="n">m</span><span class="p">.</span><span class="n">image</span><span class="o">&lt;&lt;</span><span class="s">&#34;)&#34;</span><span class="p">;</span>
	<span class="k">return</span> <span class="n">newout</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">complex</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">a</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span> 
</code></pre></td></tr></table>
</div>
</div><h2 id="参考文章">参考文章</h2>
<ul>
<li><a href="https://isocpp.org/wiki/faq/templates#template-friends" target="_blank" rel="noopener noreffer">Why do I get linker errors when I use template friends? - Standard C++</a></li>
</ul>
]]></description>
</item><item>
    <title>2021 年终：昨天一直是今天，就像今天一直是明天</title>
    <link>https://fanrongbin.com/yesterday-is-today-is-tomorrow/</link>
    <pubDate>Fri, 31 Dec 2021 20:51:59 &#43;0800</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/yesterday-is-today-is-tomorrow/</guid><description><![CDATA[<p>我想了很久，因为两年过得像一年。翻了翻手机相册，还是放弃了理顺今年「所作所为」的念头，意义不大。明天开始的新一年，似乎也将和过去的十二个月，在巨大的混凝土运送车里保持匀速搅拌，作为一大团不至于凝固的泥巴。</p>
<p>已经对新冠脱敏，指不论是日增或新变种的消息，或者突然的封校封城，在生理和心理上不为所动。其实也不仅是疫情，整体上对很多事物都看开了很多，离开了很多过去被动或主动设下的困境，或者说从源头开始避免。现在常是这样的状态，在不相调和时，我先选择离开，停止消耗，这样才能更好地拥抱自己。</p>
<p>但这种改变的确是懦弱的、畏怯的，是不能也不值得美化的。总不是束手无策的，必须承认。</p>
<p>很恍然，对明年原来没有什么特别的期待，这样的一个好处是对目标和进度的把控拉得更近了，就像在触控板上将拇指和食指收拢再分开。还有是继续向内走。我觉得这个不仅仅是我，也是这两年之后许多人或多或少都会有的行动，面对自身的时间多了，出现从复杂往简单调转的诉求。另一个好处是停止对自己预期看涨，幻想多头，这个应该是影响最大的。</p>
<p>困扰我许久的那种感受，在接连读了项飙老师的访谈录《把自己作为方法》以及《正午故事 1》中另一篇对谈后有了新的把握，「悬浮」与「错置」，都在慢慢展开的脱敏中渐渐从裹挟里剥离。还有就是大概保持着每三个月跟家人吵一次架的频率，把话讲开了。</p>
<p>这么看来，今年的收获还挺大。</p>
<p>今年听到比较有启发的播客节目有《新闻实验室》关于非虚构写作的第 17 期（《正午故事》郭玉洁，端传媒张洁平）和第 19 期（《正面连接》梁鸣），以及《晚风说》智堡 Mikko 和 Yachak 来的两期。无意中发现的《暮酒朝谈》，也给我很多帮助。</p>
<p>今年听到最喜欢的新专辑有：Yu Su《Yellow River Blue》、Mndsgn《Rare Pleasure》、Daniel Avery《Together in Static》、Ultraísta《Sister》、hikaru yamada and metal casting jazz ensemble《moon》、李遐怡《4 ONLY》、Leon Bridges《Gold-Diggers Sound》、Tinashe《333》。</p>
<p class="right-date"  align="right">2021 年 12 月 31 日</p>
<hr>
<iframe src="https://embed.podcasts.apple.com/cn/podcast/%E6%9A%AE%E9%85%92%E6%9C%9D%E8%B0%88/id1521684443?itsct=podcast_box_player&amp;itscg=30200&amp;ls=1&amp;theme=auto" height="450px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *;" style="width: 100%;  overflow: hidden; border-radius: 10px; background: transparent;"></iframe>
<hr>
<iframe allow="autoplay *; encrypted-media *; fullscreen *" frameborder="0" height="450" style="width:100%;overflow:hidden;background:transparent;" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation" src="https://embed.music.apple.com/cn/album/yellow-river-blue/1546173813"></iframe>
<hr>
<blockquote>
<p>什么是蹲下起身时眼前的洁白，什么是动物园的房间。不当一切真的命中注定，指认所有被构造的一切，要声称自己是罪人，在跌落旧关卡时搜集证据。这会是水的流动，这会是卡在鞋底细缝中风干的叶片碎末，这会是酸胀的小腿和脉冲。这就是真的，这就是假的，这一直是一场戏，我一直在剧院里走走停停。很多个分成好几段陆续死去，有些是谋杀，有些是自杀，有些出于意外，一个死了，另一个被迫接着出现，不是任何人的错，新的来了。草丛里经常种下过去拯救自己的毒药，送给兔子，他们就能帮忙消化成脚印，铺在路上，以至于再试图向前爬去时，手指所沾上的只是兔子的粪便、毒药的沉淀，膝盖磨出来的血就不会看得见，路看上去也不会太远。以至于又是一种曼妙的错觉，支撑这生死的流变。</p>
<p class="right-date" align="right">2021 年 12 月 20 日</p>
</blockquote>
]]></description>
</item><item>
    <title>来自 Apple 的流媒体推广工具</title>
    <link>https://fanrongbin.com/apple-media-service-marketing/</link>
    <pubDate>Sat, 04 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/apple-media-service-marketing/</guid><description><![CDATA[<p>Apple 分别在今年 9 月、去年 11 月和去年 7 月发布了用于 iOS 应用、播客和 Apple Music 推广的工具，以帮助开发者迅速创建赏心悦目、符合 Apple 设计规范的推广用图和网页内嵌模块。现在还包括 Arcade、News 和 TV，已经是完全搭建起整个适用于 Apple 媒体服务的推广工具平台。你可以<a href="https://tools.applemediaservices.com/" target="_blank" rel="noopener noreffer">按此访问 Apple Services Marketing Tools</a>。</p>
<p>和订阅制播客一并发布的还有 <a href="https://podcaster.apple.com/" target="_blank" rel="noopener noreffer">Apple Podcasts for Creators</a>，方便制作者查看收听数据等信息。</p>
<p>这里给出几个嵌入实例：</p>
<p>Apple Podcast：</p>
<iframe src="https://embed.podcasts.apple.com/us/podcast/%E4%BB%8E%E8%8F%9C%E8%A1%97%E5%88%B0%E5%8E%A8%E6%88%BF-07%E6%88%90%E5%B9%B4%E4%BA%BA%E7%9A%84%E6%88%90%E7%98%BE%E7%89%A9%E8%B4%A8-%E8%8C%B6%E5%92%8C%E5%92%96%E5%95%A1/id1585465479?i=1000537928836&amp;itsct=podcast_box_player&amp;itscg=30200&amp;ls=1&amp;theme=auto" height="175px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *;" style="width: 100%; overflow: hidden; border-radius: 10px; background: transparent;"></iframe>
<p>实际上会自动判断访问者所在地区。例如这是一个未在中国大陆上架的播客，显示内容不可用。</p>
<iframe src="https://embed.podcasts.apple.com/us/podcast/fokcast-%E7%94%98%E7%A5%BA%E6%B5%81%E8%A1%8C-%E9%A6%99%E6%B8%AFpodcast/id1546976247?itsct=podcast_box_player&amp;itscg=30200&amp;ls=1&amp;theme=auto" height="450px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *;" style="width: 100%; overflow: hidden; border-radius: 10px; background: transparent;"></iframe>
<p>Apple Music：</p>
<iframe src="https://embed.music.apple.com/us/album/tellusboutyourself/1543102982?app=music&amp;itsct=music_box_player&amp;itscg=30200&amp;ls=1" height="450px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *;" style="width: 100%; overflow: hidden; border-radius: 10px; background: transparent;"></iframe>
<p>Apple TV：</p>
<iframe src="https://embed.tv.apple.com/us/show/snoopy-in-space-the-search-for-life/umc.cmc.12l86ri6vfjlimw2m8b8dzszs?itscg=30200&amp;itsct=tv_box_player" height="371px" frameborder="0" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="autoplay *; encrypted-media *;" style="width: 100%; max-width: 660px; border-radius: 10px; background: transparent;"></iframe>
<p>Apple Store 推广用图：</p>

<p>挺好看的。</p>
]]></description>
</item><item>
    <title>C&#43;&#43; 中的拷贝构造函数：浅拷贝、深拷贝</title>
    <link>https://fanrongbin.com/cpp-copy-constructor/</link>
    <pubDate>Mon, 29 Nov 2021 00:00:00 &#43;0000</pubDate><author>
        <name>Rongbin Fan</name>
    </author><guid>https://fanrongbin.com/cpp-copy-constructor/</guid><description><![CDATA[<h2 id="什么时候会调用拷贝构造函数">什么时候会调用拷贝构造函数</h2>
<ul>
<li>一个对象以<strong>值传递</strong>的方式<strong>传入函数体</strong></li>
<li>一个对象以<strong>值传递</strong>的方式<strong>从函数返回</strong></li>
<li>一个对象<strong>通过另一个对象</strong>以进行<strong>初始化</strong></li>
</ul>
<h2 id="默认拷贝构造函数浅拷贝">默认拷贝构造函数：浅拷贝</h2>
<p>即：将被拷贝对象的数据成员的值一一赋值给新创建的对象</p>
<ul>
<li>如果数据成员中有指针成员
<ul>
<li><strong>浅拷贝只是增加了一个指针指向已经存在的内存</strong></li>
<li>则<strong>新对象的指针所指向的地址</strong>与<strong>被拷贝对象的指针所指向的地址</strong>相同</li>
<li>则析构 delete 对象时会重复 delete 两次同一个内存空间而出错</li>
</ul>
</li>
</ul>
<h3 id="实例">实例</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="k">class</span> <span class="nc">Rect</span><span class="p">{</span>
<span class="k">private</span><span class="o">:</span>
		<span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>     <span class="c1">// 一指针成员
</span><span class="c1"></span><span class="k">public</span><span class="o">:</span>
    <span class="n">Rect</span><span class="p">(){</span>      <span class="c1">// 构造函数，p 指向堆中分配的一内存
</span><span class="c1"></span>        <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span> <span class="c1">// new 动态分配
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="o">~</span><span class="n">Rect</span><span class="p">(){</span>     <span class="c1">// 析构函数，释放动态分配的内存
</span><span class="c1"></span>        <span class="k">if</span><span class="p">(</span><span class="n">p</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">){</span>
            <span class="k">delete</span> <span class="n">p</span><span class="p">;</span> <span class="c1">// delete 释放 p 所指向的内存
</span><span class="c1"></span>        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">Rect</span> <span class="n">rect1</span><span class="p">;</span>
    <span class="n">Rect</span> <span class="n">rect2</span><span class="p">(</span><span class="n">rect1</span><span class="p">);</span>   <span class="c1">// 拷贝 rect1 来构造 rect2
</span><span class="c1"></span>		<span class="c1">// 也即： Rect rect2 = rect1;
</span><span class="c1"></span>		<span class="c1">// 浅拷贝，将成员的值进行拷贝 rect2.p = rect1.p （地址 = 地址）
</span><span class="c1"></span>
		<span class="c1">// 会出现错误
</span><span class="c1"></span>		<span class="c1">// 在 delete 时既要 delete rect2.p 指向的空间，又要 delete rect1.p 指向的内存。但这是同一个内存（地址 = 地址），导致同一个内存被释放两次
</span><span class="c1"></span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同时还造成另外两个错误：</p>
<ul>
<li><code>rect2.p</code> 在初始化时新建的 <code>p</code> 所指向的内存没被释放（因为构造函数新建之后，又直接值传递换了地址），造成内存泄漏</li>
<li><code>rect2.p</code>（指针） 和 <code>rect1.p</code>（指针）指向同一块内存（同一个地址），任何一方的变动都会影响另一方</li>
</ul>
<h2 id="自行新建拷贝构造函数并使用深拷贝">自行新建拷贝构造函数：并使用深拷贝</h2>
<p>新增加一个指针，并申请一个新的内存。新指针指向新内存。</p>
<h3 id="实例-1">实例</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="k">class</span> <span class="nc">Rect</span><span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>			<span class="c1">// 一指针成员
</span><span class="c1"></span>    <span class="n">Rect</span><span class="p">(){</span>     <span class="c1">// 构造函数，p指向堆中分配的一内存
</span><span class="c1"></span>        <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">Rect</span><span class="p">(</span><span class="k">const</span> <span class="n">Rect</span> <span class="o">&amp;</span><span class="n">r</span><span class="p">){</span> <span class="c1">// 自行新建拷贝构造函数
</span><span class="c1"></span>        <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">;</span>     <span class="c1">// 为新对象重新动态分配内存
</span><span class="c1"></span>        <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="o">*</span><span class="n">r</span><span class="p">.</span><span class="n">p</span><span class="p">;</span>
        <span class="c1">// 或带括号 *p = *(r.p);
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="o">~</span><span class="n">Rect</span><span class="p">(){</span>    <span class="c1">// 析构函数，释放动态分配的内存
</span><span class="c1"></span>        <span class="k">if</span><span class="p">(</span><span class="n">p</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">){</span>
            <span class="k">delete</span> <span class="n">p</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">Rect</span> <span class="n">rect1</span><span class="p">;</span>
    <span class="n">Rect</span> <span class="n">rect2</span><span class="p">(</span><span class="n">rect1</span><span class="p">);</span>		<span class="c1">// 拷贝 rect1 来构造 rect2
</span><span class="c1"></span>		<span class="c1">// 也即： Rect rect2 = rect1;
</span><span class="c1"></span>    <span class="c1">// 深拷贝，创建新的 p 以及其所指向的空间，然后把值赋过去 *r.p = *rect1.p; 然后 *rect2.p = *r.p;
</span><span class="c1"></span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>不妨输出地址比对一下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="k">class</span> <span class="nc">Rect</span><span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
    <span class="n">Rect</span><span class="p">(){</span>
        <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>
        <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&#34;start new: &#34;</span><span class="o">&lt;&lt;</span><span class="n">p</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span> <span class="c1">// 无参的新构造（初始化）时创建的内存空间
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="n">Rect</span><span class="p">(</span><span class="k">const</span> <span class="n">Rect</span> <span class="o">&amp;</span><span class="n">r</span><span class="p">){</span>
        <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">;</span>
        <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&#34;copy: &#34;</span><span class="o">&lt;&lt;</span><span class="n">p</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span> 			<span class="c1">// 拷贝构造时创建的内存空间
</span><span class="c1"></span>        <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="o">*</span><span class="n">r</span><span class="p">.</span><span class="n">p</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="o">~</span><span class="n">Rect</span><span class="p">(){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">p</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">){</span>
            <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&#34;de: &#34;</span><span class="o">&lt;&lt;</span><span class="n">p</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span> 		<span class="c1">// 所析构掉的内存空间
</span><span class="c1"></span>            <span class="k">delete</span> <span class="n">p</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">Rect</span> <span class="n">rect1</span><span class="p">;</span>
    <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">rect1</span><span class="p">.</span><span class="n">p</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>		<span class="c1">// rect1.p 指向的内存空间
</span><span class="c1"></span>    <span class="n">Rect</span> <span class="n">rect2</span><span class="p">(</span><span class="n">rect1</span><span class="p">);</span>			<span class="c1">// 拷贝 rect1 来构造 rect2
</span><span class="c1"></span>    <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">rect2</span><span class="p">.</span><span class="n">p</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>		<span class="c1">// rect2.p 指向的内存空间
</span><span class="c1"></span>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>输出得：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">start new: 0x10582d930
0x10582d930
copy: 0x10582f220
0x10582f220
de: 0x10582f220
de: 0x10582d930
Program ended with <span class="nb">exit</span> code: <span class="m">0</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="参考">参考</h2>
<ul>
<li><a href="https://blog.csdn.net/xunye_dream/article/details/77547438" target="_blank" rel="noopener noreffer">C语言中的位拷贝与值拷贝浅谈 - CSDN</a></li>
<li><a href="https://blog.csdn.net/lwbeyond/article/details/6202256" target="_blank" rel="noopener noreffer">C++拷贝构造函数详解 - CSDN</a></li>
</ul>
]]></description>
</item></channel>
</rss>
